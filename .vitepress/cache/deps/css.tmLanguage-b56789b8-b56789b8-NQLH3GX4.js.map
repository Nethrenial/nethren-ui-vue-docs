{
  "version": 3,
  "sources": ["../../../node_modules/vite-plugin-vue-preview/dist/chunks/css.tmLanguage-b56789b8-b56789b8.js"],
  "sourcesContent": ["/**\n * name: vite-plugin-vue-preview\n * version: v2.0.0\n * description: a vite plugin for vue preview in markdown\n * author: liting <luz.liting@gmail.com>\n * homepage: https://vite-plugin-vue-preview.netlify.app\n */\nconst information_for_contributors = [\n  \"This file has been converted from https://github.com/atom/language-css/blob/master/grammars/css.cson\",\n  \"If you want to provide a fix or improvement, please create a pull request against the original repository.\",\n  \"Once accepted there, we are happy to receive an update request.\"\n];\nconst version = \"https://github.com/atom/language-css/commit/672168274c7b457f3c118788b5171ae888c1bf07\";\nconst name = \"CSS\";\nconst scopeName = \"source.css\";\nconst patterns = [\n  {\n    include: \"#comment-block\"\n  },\n  {\n    include: \"#escapes\"\n  },\n  {\n    include: \"#combinators\"\n  },\n  {\n    include: \"#selector\"\n  },\n  {\n    include: \"#at-rules\"\n  },\n  {\n    include: \"#rule-list\"\n  }\n];\nconst repository = {\n  \"at-rules\": {\n    patterns: [\n      {\n        begin: \"\\\\A(?:\\\\xEF\\\\xBB\\\\xBF)?(?i:(?=\\\\s*@charset\\\\b))\",\n        end: \";|(?=$)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.terminator.rule.css\"\n          }\n        },\n        name: \"meta.at-rule.charset.css\",\n        patterns: [\n          {\n            captures: {\n              \"1\": {\n                name: \"invalid.illegal.not-lowercase.charset.css\"\n              },\n              \"2\": {\n                name: \"invalid.illegal.leading-whitespace.charset.css\"\n              },\n              \"3\": {\n                name: \"invalid.illegal.no-whitespace.charset.css\"\n              },\n              \"4\": {\n                name: \"invalid.illegal.whitespace.charset.css\"\n              },\n              \"5\": {\n                name: \"invalid.illegal.not-double-quoted.charset.css\"\n              },\n              \"6\": {\n                name: \"invalid.illegal.unclosed-string.charset.css\"\n              },\n              \"7\": {\n                name: \"invalid.illegal.unexpected-characters.charset.css\"\n              }\n            },\n            match: '(?x)        # Possible errors:\\n\\\\G\\n((?!@charset)@\\\\w+)   # Not lowercase (@charset is case-sensitive)\\n|\\n\\\\G(\\\\s+)             # Preceding whitespace\\n|\\n(@charset\\\\S[^;]*)    # No whitespace after @charset\\n|\\n(?<=@charset)         # Before quoted charset name\\n(\\\\x20{2,}|\\\\t+)      # More than one space used, or a tab\\n|\\n(?<=@charset\\\\x20)    # Beginning of charset name\\n([^\";]+)              # Not double-quoted\\n|\\n(\"[^\"]+$)             # Unclosed quote\\n|\\n(?<=\")                # After charset name\\n([^;]+)               # Unexpected junk instead of semicolon'\n          },\n          {\n            captures: {\n              \"1\": {\n                name: \"keyword.control.at-rule.charset.css\"\n              },\n              \"2\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            match: \"((@)charset)(?=\\\\s)\"\n          },\n          {\n            begin: '\"',\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.definition.string.begin.css\"\n              }\n            },\n            end: '\"|$',\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.definition.string.end.css\"\n              }\n            },\n            name: \"string.quoted.double.css\",\n            patterns: [\n              {\n                begin: '(?:\\\\G|^)(?=(?:[^\"])+$)',\n                end: \"$\",\n                name: \"invalid.illegal.unclosed.string.css\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: `(?i)((@)import)(?:\\\\s+|$|(?=['\"]|/\\\\*))`,\n        beginCaptures: {\n          \"1\": {\n            name: \"keyword.control.at-rule.import.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.keyword.css\"\n          }\n        },\n        end: \";\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.terminator.rule.css\"\n          }\n        },\n        name: \"meta.at-rule.import.css\",\n        patterns: [\n          {\n            begin: \"\\\\G\\\\s*(?=/\\\\*)\",\n            end: \"(?<=\\\\*/)\\\\s*\",\n            patterns: [\n              {\n                include: \"#comment-block\"\n              }\n            ]\n          },\n          {\n            include: \"#string\"\n          },\n          {\n            include: \"#url\"\n          },\n          {\n            include: \"#media-query-list\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)((@)font-face)(?=\\\\s*|{|/\\\\*|$)\",\n        beginCaptures: {\n          \"1\": {\n            name: \"keyword.control.at-rule.font-face.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.keyword.css\"\n          }\n        },\n        end: \"(?!\\\\G)\",\n        name: \"meta.at-rule.font-face.css\",\n        patterns: [\n          {\n            include: \"#comment-block\"\n          },\n          {\n            include: \"#escapes\"\n          },\n          {\n            include: \"#rule-list\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(@)page(?=[\\\\s:{]|/\\\\*|$)\",\n        captures: {\n          \"0\": {\n            name: \"keyword.control.at-rule.page.css\"\n          },\n          \"1\": {\n            name: \"punctuation.definition.keyword.css\"\n          }\n        },\n        end: \"(?=\\\\s*($|[:{;]))\",\n        name: \"meta.at-rule.page.css\",\n        patterns: [\n          {\n            include: \"#rule-list\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?=@media(\\\\s|\\\\(|/\\\\*|$))\",\n        end: \"(?<=})(?!\\\\G)\",\n        patterns: [\n          {\n            begin: \"(?i)\\\\G(@)media\",\n            beginCaptures: {\n              \"0\": {\n                name: \"keyword.control.at-rule.media.css\"\n              },\n              \"1\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            end: \"(?=\\\\s*[{;])\",\n            name: \"meta.at-rule.media.header.css\",\n            patterns: [\n              {\n                include: \"#media-query-list\"\n              }\n            ]\n          },\n          {\n            begin: \"{\",\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.section.media.begin.bracket.curly.css\"\n              }\n            },\n            end: \"}\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.section.media.end.bracket.curly.css\"\n              }\n            },\n            name: \"meta.at-rule.media.body.css\",\n            patterns: [\n              {\n                include: \"$self\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: `(?i)(?=@counter-style([\\\\s'\"{;]|/\\\\*|$))`,\n        end: \"(?<=})(?!\\\\G)\",\n        patterns: [\n          {\n            begin: \"(?i)\\\\G(@)counter-style\",\n            beginCaptures: {\n              \"0\": {\n                name: \"keyword.control.at-rule.counter-style.css\"\n              },\n              \"1\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            end: \"(?=\\\\s*{)\",\n            name: \"meta.at-rule.counter-style.header.css\",\n            patterns: [\n              {\n                include: \"#comment-block\"\n              },\n              {\n                include: \"#escapes\"\n              },\n              {\n                captures: {\n                  \"0\": {\n                    patterns: [\n                      {\n                        include: \"#escapes\"\n                      }\n                    ]\n                  }\n                },\n                match: \"(?x)\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\",\n                name: \"variable.parameter.style-name.css\"\n              }\n            ]\n          },\n          {\n            begin: \"{\",\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.section.property-list.begin.bracket.curly.css\"\n              }\n            },\n            end: \"}\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.section.property-list.end.bracket.curly.css\"\n              }\n            },\n            name: \"meta.at-rule.counter-style.body.css\",\n            patterns: [\n              {\n                include: \"#comment-block\"\n              },\n              {\n                include: \"#escapes\"\n              },\n              {\n                include: \"#rule-list-innards\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: `(?i)(?=@document([\\\\s'\"{;]|/\\\\*|$))`,\n        end: \"(?<=})(?!\\\\G)\",\n        patterns: [\n          {\n            begin: \"(?i)\\\\G(@)document\",\n            beginCaptures: {\n              \"0\": {\n                name: \"keyword.control.at-rule.document.css\"\n              },\n              \"1\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            end: \"(?=\\\\s*[{;])\",\n            name: \"meta.at-rule.document.header.css\",\n            patterns: [\n              {\n                begin: \"(?i)(?<![\\\\w-])(url-prefix|domain|regexp)(\\\\()\",\n                beginCaptures: {\n                  \"1\": {\n                    name: \"support.function.document-rule.css\"\n                  },\n                  \"2\": {\n                    name: \"punctuation.section.function.begin.bracket.round.css\"\n                  }\n                },\n                end: \"\\\\)\",\n                endCaptures: {\n                  \"0\": {\n                    name: \"punctuation.section.function.end.bracket.round.css\"\n                  }\n                },\n                name: \"meta.function.document-rule.css\",\n                patterns: [\n                  {\n                    include: \"#string\"\n                  },\n                  {\n                    include: \"#comment-block\"\n                  },\n                  {\n                    include: \"#escapes\"\n                  },\n                  {\n                    match: `[^'\")\\\\s]+`,\n                    name: \"variable.parameter.document-rule.css\"\n                  }\n                ]\n              },\n              {\n                include: \"#url\"\n              },\n              {\n                include: \"#commas\"\n              },\n              {\n                include: \"#comment-block\"\n              },\n              {\n                include: \"#escapes\"\n              }\n            ]\n          },\n          {\n            begin: \"{\",\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.section.document.begin.bracket.curly.css\"\n              }\n            },\n            end: \"}\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.section.document.end.bracket.curly.css\"\n              }\n            },\n            name: \"meta.at-rule.document.body.css\",\n            patterns: [\n              {\n                include: \"$self\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: `(?i)(?=@(?:-(?:webkit|moz|o|ms)-)?keyframes([\\\\s'\"{;]|/\\\\*|$))`,\n        end: \"(?<=})(?!\\\\G)\",\n        patterns: [\n          {\n            begin: \"(?i)\\\\G(@)(?:-(?:webkit|moz|o|ms)-)?keyframes\",\n            beginCaptures: {\n              \"0\": {\n                name: \"keyword.control.at-rule.keyframes.css\"\n              },\n              \"1\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            end: \"(?=\\\\s*{)\",\n            name: \"meta.at-rule.keyframes.header.css\",\n            patterns: [\n              {\n                include: \"#comment-block\"\n              },\n              {\n                include: \"#escapes\"\n              },\n              {\n                captures: {\n                  \"0\": {\n                    patterns: [\n                      {\n                        include: \"#escapes\"\n                      }\n                    ]\n                  }\n                },\n                match: \"(?x)\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\",\n                name: \"variable.parameter.keyframe-list.css\"\n              }\n            ]\n          },\n          {\n            begin: \"{\",\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.section.keyframes.begin.bracket.curly.css\"\n              }\n            },\n            end: \"}\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.section.keyframes.end.bracket.curly.css\"\n              }\n            },\n            name: \"meta.at-rule.keyframes.body.css\",\n            patterns: [\n              {\n                include: \"#comment-block\"\n              },\n              {\n                include: \"#escapes\"\n              },\n              {\n                captures: {\n                  \"1\": {\n                    name: \"entity.other.keyframe-offset.css\"\n                  },\n                  \"2\": {\n                    name: \"entity.other.keyframe-offset.percentage.css\"\n                  }\n                },\n                match: \"(?xi)\\n(?<![\\\\w-]) (from|to) (?![\\\\w-])         # Keywords for 0% | 100%\\n|\\n([-+]?(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)%)     # Percentile value\"\n              },\n              {\n                include: \"#rule-list\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?=@supports(\\\\s|\\\\(|/\\\\*|$))\",\n        end: \"(?<=})(?!\\\\G)|(?=;)\",\n        patterns: [\n          {\n            begin: \"(?i)\\\\G(@)supports\",\n            beginCaptures: {\n              \"0\": {\n                name: \"keyword.control.at-rule.supports.css\"\n              },\n              \"1\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            end: \"(?=\\\\s*[{;])\",\n            name: \"meta.at-rule.supports.header.css\",\n            patterns: [\n              {\n                include: \"#feature-query-operators\"\n              },\n              {\n                include: \"#feature-query\"\n              },\n              {\n                include: \"#comment-block\"\n              },\n              {\n                include: \"#escapes\"\n              }\n            ]\n          },\n          {\n            begin: \"{\",\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.section.supports.begin.bracket.curly.css\"\n              }\n            },\n            end: \"}\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.section.supports.end.bracket.curly.css\"\n              }\n            },\n            name: \"meta.at-rule.supports.body.css\",\n            patterns: [\n              {\n                include: \"$self\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: `(?i)((@)(-(ms|o)-)?viewport)(?=[\\\\s'\"{;]|/\\\\*|$)`,\n        beginCaptures: {\n          \"1\": {\n            name: \"keyword.control.at-rule.viewport.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.keyword.css\"\n          }\n        },\n        end: \"(?=\\\\s*[@{;])\",\n        name: \"meta.at-rule.viewport.css\",\n        patterns: [\n          {\n            include: \"#comment-block\"\n          },\n          {\n            include: \"#escapes\"\n          }\n        ]\n      },\n      {\n        begin: `(?i)((@)font-feature-values)(?=[\\\\s'\"{;]|/\\\\*|$)\\\\s*`,\n        beginCaptures: {\n          \"1\": {\n            name: \"keyword.control.at-rule.font-feature-values.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.keyword.css\"\n          }\n        },\n        contentName: \"variable.parameter.font-name.css\",\n        end: \"(?=\\\\s*[@{;])\",\n        name: \"meta.at-rule.font-features.css\",\n        patterns: [\n          {\n            include: \"#comment-block\"\n          },\n          {\n            include: \"#escapes\"\n          }\n        ]\n      },\n      {\n        include: \"#font-features\"\n      },\n      {\n        begin: `(?i)((@)namespace)(?=[\\\\s'\";]|/\\\\*|$)`,\n        beginCaptures: {\n          \"1\": {\n            name: \"keyword.control.at-rule.namespace.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.keyword.css\"\n          }\n        },\n        end: \";|(?=[@{])\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.terminator.rule.css\"\n          }\n        },\n        name: \"meta.at-rule.namespace.css\",\n        patterns: [\n          {\n            include: \"#url\"\n          },\n          {\n            captures: {\n              \"1\": {\n                patterns: [\n                  {\n                    include: \"#comment-block\"\n                  }\n                ]\n              },\n              \"2\": {\n                name: \"entity.name.function.namespace-prefix.css\",\n                patterns: [\n                  {\n                    include: \"#escapes\"\n                  }\n                ]\n              }\n            },\n            match: \"(?xi)\\n(?:\\\\G|^|(?<=\\\\s))\\n(?=\\n  (?<=\\\\s|^)                             # Starts with whitespace\\n  (?:[-a-zA-Z_]|[^\\\\x00-\\\\x7F])          # Then a valid identifier character\\n  |\\n  \\\\s*                                   # Possible adjoining whitespace\\n  /\\\\*(?:[^*]|\\\\*[^/])*\\\\*/              # Injected comment\\n)\\n(.*?)                                    # Grouped to embed #comment-block\\n(\\n  (?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n  (?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n    |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n  )*\\n)\"\n          },\n          {\n            include: \"#comment-block\"\n          },\n          {\n            include: \"#escapes\"\n          },\n          {\n            include: \"#string\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?=@[\\\\w-]+[^;]+;s*$)\",\n        end: \"(?<=;)(?!\\\\G)\",\n        patterns: [\n          {\n            begin: \"(?i)\\\\G(@)[\\\\w-]+\",\n            beginCaptures: {\n              \"0\": {\n                name: \"keyword.control.at-rule.css\"\n              },\n              \"1\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            end: \";\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.terminator.rule.css\"\n              }\n            },\n            name: \"meta.at-rule.header.css\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?=@[\\\\w-]+(\\\\s|\\\\(|{|/\\\\*|$))\",\n        end: \"(?<=})(?!\\\\G)\",\n        patterns: [\n          {\n            begin: \"(?i)\\\\G(@)[\\\\w-]+\",\n            beginCaptures: {\n              \"0\": {\n                name: \"keyword.control.at-rule.css\"\n              },\n              \"1\": {\n                name: \"punctuation.definition.keyword.css\"\n              }\n            },\n            end: \"(?=\\\\s*[{;])\",\n            name: \"meta.at-rule.header.css\"\n          },\n          {\n            begin: \"{\",\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.section.begin.bracket.curly.css\"\n              }\n            },\n            end: \"}\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.section.end.bracket.curly.css\"\n              }\n            },\n            name: \"meta.at-rule.body.css\",\n            patterns: [\n              {\n                include: \"$self\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"color-keywords\": {\n    patterns: [\n      {\n        match: \"(?i)(?<![\\\\w-])(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)(?![\\\\w-])\",\n        name: \"support.constant.color.w3c-standard-color-name.css\"\n      },\n      {\n        match: \"(?xi) (?<![\\\\w-])\\n(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood\\n|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan\\n|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange\\n|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise\\n|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen\\n|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki\\n|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow\\n|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray\\n|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue\\n|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise\\n|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered\\n|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum\\n|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell\\n|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato\\n|transparent|turquoise|violet|wheat|whitesmoke|yellowgreen)\\n(?![\\\\w-])\",\n        name: \"support.constant.color.w3c-extended-color-name.css\"\n      },\n      {\n        match: \"(?i)(?<![\\\\w-])currentColor(?![\\\\w-])\",\n        name: \"support.constant.color.current.css\"\n      },\n      {\n        match: \"(?xi) (?<![\\\\w-])\\n(ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow\\n|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption\\n|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow\\n|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText)\\n(?![\\\\w-])\",\n        name: \"invalid.deprecated.color.system.css\"\n      }\n    ]\n  },\n  combinators: {\n    patterns: [\n      {\n        match: \"/deep/|>>>\",\n        name: \"invalid.deprecated.combinator.css\"\n      },\n      {\n        match: \">>|>|\\\\+|~\",\n        name: \"keyword.operator.combinator.css\"\n      }\n    ]\n  },\n  commas: {\n    match: \",\",\n    name: \"punctuation.separator.list.comma.css\"\n  },\n  \"comment-block\": {\n    begin: \"/\\\\*\",\n    beginCaptures: {\n      \"0\": {\n        name: \"punctuation.definition.comment.begin.css\"\n      }\n    },\n    end: \"\\\\*/\",\n    endCaptures: {\n      \"0\": {\n        name: \"punctuation.definition.comment.end.css\"\n      }\n    },\n    name: \"comment.block.css\"\n  },\n  escapes: {\n    patterns: [\n      {\n        match: \"\\\\\\\\[0-9a-fA-F]{1,6}\",\n        name: \"constant.character.escape.codepoint.css\"\n      },\n      {\n        begin: \"\\\\\\\\$\\\\s*\",\n        end: \"^(?<!\\\\G)\",\n        name: \"constant.character.escape.newline.css\"\n      },\n      {\n        match: \"\\\\\\\\.\",\n        name: \"constant.character.escape.css\"\n      }\n    ]\n  },\n  \"feature-query\": {\n    begin: \"\\\\(\",\n    beginCaptures: {\n      \"0\": {\n        name: \"punctuation.definition.condition.begin.bracket.round.css\"\n      }\n    },\n    end: \"\\\\)\",\n    endCaptures: {\n      \"0\": {\n        name: \"punctuation.definition.condition.end.bracket.round.css\"\n      }\n    },\n    name: \"meta.feature-query.css\",\n    patterns: [\n      {\n        include: \"#feature-query-operators\"\n      },\n      {\n        include: \"#feature-query\"\n      }\n    ]\n  },\n  \"feature-query-operators\": {\n    patterns: [\n      {\n        match: \"(?i)(?<=[\\\\s()]|^|\\\\*/)(and|not|or)(?=[\\\\s()]|/\\\\*|$)\",\n        name: \"keyword.operator.logical.feature.$1.css\"\n      },\n      {\n        include: \"#rule-list-innards\"\n      }\n    ]\n  },\n  \"font-features\": {\n    begin: `(?xi)\n((@)(annotation|character-variant|ornaments|styleset|stylistic|swash))\n(?=[\\\\s@'\"{;]|/\\\\*|$)`,\n    beginCaptures: {\n      \"1\": {\n        name: \"keyword.control.at-rule.${3:/downcase}.css\"\n      },\n      \"2\": {\n        name: \"punctuation.definition.keyword.css\"\n      }\n    },\n    end: \"(?<=})\",\n    name: \"meta.at-rule.${3:/downcase}.css\",\n    patterns: [\n      {\n        begin: \"{\",\n        beginCaptures: {\n          \"0\": {\n            name: \"punctuation.section.property-list.begin.bracket.curly.css\"\n          }\n        },\n        end: \"}\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.property-list.end.bracket.curly.css\"\n          }\n        },\n        name: \"meta.property-list.font-feature.css\",\n        patterns: [\n          {\n            captures: {\n              \"0\": {\n                patterns: [\n                  {\n                    include: \"#escapes\"\n                  }\n                ]\n              }\n            },\n            match: \"(?x)\\n(?: [-a-zA-Z_]    | [^\\\\x00-\\\\x7F] )   # First letter\\n(?: [-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]     # Remainder of identifier\\n  | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\",\n            name: \"variable.font-feature.css\"\n          },\n          {\n            include: \"#rule-list-innards\"\n          }\n        ]\n      }\n    ]\n  },\n  functions: {\n    patterns: [\n      {\n        begin: \"(?i)(?<![\\\\w-])(calc)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.calc.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.calc.css\",\n        patterns: [\n          {\n            match: \"[*/]|(?<=\\\\s|^)[-+](?=\\\\s|$)\",\n            name: \"keyword.operator.arithmetic.css\"\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?<![\\\\w-])(rgba?|hsla?)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.misc.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.color.css\",\n        patterns: [\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        begin: '(?xi) (?<![\\\\w-])\\n(\\n  (?:-webkit-|-moz-|-o-)?    # Accept prefixed/historical variants\\n  (?:repeating-)?            # \"Repeating\"-type gradient\\n  (?:linear|radial|conic)    # Shape\\n  -gradient\\n)\\n(\\\\()',\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.gradient.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.gradient.css\",\n        patterns: [\n          {\n            match: \"(?i)(?<![\\\\w-])(from|to|at)(?![\\\\w-])\",\n            name: \"keyword.operator.gradient.css\"\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?<![\\\\w-])(-webkit-gradient)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"invalid.deprecated.gradient.function.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.gradient.invalid.deprecated.gradient.css\",\n        patterns: [\n          {\n            begin: \"(?i)(?<![\\\\w-])(from|to|color-stop)(\\\\()\",\n            beginCaptures: {\n              \"1\": {\n                name: \"invalid.deprecated.function.css\"\n              },\n              \"2\": {\n                name: \"punctuation.section.function.begin.bracket.round.css\"\n              }\n            },\n            end: \"\\\\)\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.section.function.end.bracket.round.css\"\n              }\n            },\n            patterns: [\n              {\n                include: \"#property-values\"\n              }\n            ]\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        begin: \"(?xi) (?<![\\\\w-])\\n(annotation|attr|blur|brightness|character-variant|contrast|counters?\\n|cross-fade|drop-shadow|element|fit-content|format|grayscale|hue-rotate\\n|image-set|invert|local|minmax|opacity|ornaments|repeat|saturate|sepia\\n|styleset|stylistic|swash|symbols)\\n(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.misc.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.misc.css\",\n        patterns: [\n          {\n            match: `(?i)(?<=[,\\\\s\"]|\\\\*/|^)\\\\d+x(?=[\\\\s,\"')]|/\\\\*|$)`,\n            name: \"constant.numeric.other.density.css\"\n          },\n          {\n            include: \"#property-values\"\n          },\n          {\n            match: `[^'\"),\\\\s]+`,\n            name: \"variable.parameter.misc.css\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?<![\\\\w-])(circle|ellipse|inset|polygon|rect)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.shape.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.shape.css\",\n        patterns: [\n          {\n            match: \"(?i)(?<=\\\\s|^|\\\\*/)(at|round)(?=\\\\s|/\\\\*|$)\",\n            name: \"keyword.operator.shape.css\"\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)(?<![\\\\w-])(cubic-bezier|steps)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.timing-function.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.timing-function.css\",\n        patterns: [\n          {\n            match: \"(?i)(?<![\\\\w-])(start|end)(?=\\\\s*\\\\)|$)\",\n            name: \"support.constant.step-direction.css\"\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        begin: \"(?xi) (?<![\\\\w-])\\n( (?:translate|scale|rotate)(?:[XYZ]|3D)?\\n| matrix(?:3D)?\\n| skew[XY]?\\n| perspective\\n)\\n(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.transform.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        patterns: [\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        include: \"#url\"\n      },\n      {\n        begin: \"(?i)(?<![\\\\w-])(var)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"support.function.misc.css\"\n          },\n          \"2\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        name: \"meta.function.variable.css\",\n        patterns: [\n          {\n            name: \"variable.argument.css\",\n            match: \"(?x)\\n--\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\"\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      }\n    ]\n  },\n  \"functional-pseudo-classes\": {\n    patterns: [\n      {\n        begin: \"(?i)((:)dir)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"entity.other.attribute-name.pseudo-class.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.entity.css\"\n          },\n          \"3\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        patterns: [\n          {\n            include: \"#comment-block\"\n          },\n          {\n            include: \"#escapes\"\n          },\n          {\n            match: \"(?i)(?<![\\\\w-])(ltr|rtl)(?![\\\\w-])\",\n            name: \"support.constant.text-direction.css\"\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)((:)lang)(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"entity.other.attribute-name.pseudo-class.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.entity.css\"\n          },\n          \"3\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        patterns: [\n          {\n            match: \"(?<=[(,\\\\s])[a-zA-Z]+(-[a-zA-Z0-9]*|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))*(?=[),\\\\s])\",\n            name: \"support.constant.language-range.css\"\n          },\n          {\n            begin: '\"',\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.definition.string.begin.css\"\n              }\n            },\n            end: '\"',\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.definition.string.end.css\"\n              }\n            },\n            name: \"string.quoted.double.css\",\n            patterns: [\n              {\n                include: \"#escapes\"\n              },\n              {\n                match: '(?<=[\"\\\\s])[a-zA-Z*]+(-[a-zA-Z0-9*]*)*(?=[\"\\\\s])',\n                name: \"support.constant.language-range.css\"\n              }\n            ]\n          },\n          {\n            begin: \"'\",\n            beginCaptures: {\n              \"0\": {\n                name: \"punctuation.definition.string.begin.css\"\n              }\n            },\n            end: \"'\",\n            endCaptures: {\n              \"0\": {\n                name: \"punctuation.definition.string.end.css\"\n              }\n            },\n            name: \"string.quoted.single.css\",\n            patterns: [\n              {\n                include: \"#escapes\"\n              },\n              {\n                match: \"(?<=['\\\\s])[a-zA-Z*]+(-[a-zA-Z0-9*]*)*(?=['\\\\s])\",\n                name: \"support.constant.language-range.css\"\n              }\n            ]\n          },\n          {\n            include: \"#commas\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)((:)(?:not|has|matches))(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"entity.other.attribute-name.pseudo-class.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.entity.css\"\n          },\n          \"3\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        patterns: [\n          {\n            include: \"#selector-innards\"\n          }\n        ]\n      },\n      {\n        begin: \"(?i)((:)nth-(?:last-)?(?:child|of-type))(\\\\()\",\n        beginCaptures: {\n          \"1\": {\n            name: \"entity.other.attribute-name.pseudo-class.css\"\n          },\n          \"2\": {\n            name: \"punctuation.definition.entity.css\"\n          },\n          \"3\": {\n            name: \"punctuation.section.function.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.section.function.end.bracket.round.css\"\n          }\n        },\n        patterns: [\n          {\n            match: \"(?i)[+-]?(\\\\d+n?|n)(\\\\s*[+-]\\\\s*\\\\d+)?\",\n            name: \"constant.numeric.css\"\n          },\n          {\n            match: \"(?i)even|odd\",\n            name: \"support.constant.parity.css\"\n          }\n        ]\n      }\n    ]\n  },\n  \"media-features\": {\n    captures: {\n      \"1\": {\n        name: \"support.type.property-name.media.css\"\n      },\n      \"2\": {\n        name: \"support.type.property-name.media.css\"\n      },\n      \"3\": {\n        name: \"support.type.vendored.property-name.media.css\"\n      }\n    },\n    match: \"(?xi)\\n(?<=^|\\\\s|\\\\(|\\\\*/)           # Preceded by whitespace, bracket or comment\\n(?:\\n  # Standardised features\\n  (\\n    (?:min-|max-)?            # Range features\\n    (?: height\\n      | width\\n      | aspect-ratio\\n      | color\\n      | color-index\\n      | monochrome\\n      | resolution\\n    )\\n    | grid                    # Discrete features\\n    | scan\\n    | orientation\\n    | display-mode\\n    | hover\\n  )\\n  |\\n  # Deprecated features\\n  (\\n    (?:min-|max-)?            # Deprecated in Media Queries 4\\n    device-\\n    (?: height\\n      | width\\n      | aspect-ratio\\n    )\\n  )\\n  |\\n  # Vendor extensions\\n  (\\n    (?:\\n      # Spec-compliant syntax\\n      [-_]\\n      (?: webkit              # Webkit/Blink\\n        | apple|khtml         # Webkit aliases\\n        | epub                # ePub3\\n        | moz                 # Gecko\\n        | ms                  # Microsoft\\n        | o                   # Presto (pre-Opera 15)\\n        | xv|ah|rim|atsc|     # Less common vendors\\n          hp|tc|wap|ro\\n      )\\n      |\\n      # Non-standard prefixes\\n      (?: mso                 # Microsoft Office\\n        | prince              # YesLogic\\n      )\\n    )\\n    -\\n    [\\\\w-]+                   # Feature name\\n    (?=                       # Terminates correctly\\n      \\\\s*                    # Possible whitespace\\n      (?:                     # Possible injected comment\\n        /\\\\*\\n        (?:[^*]|\\\\*[^/])*\\n        \\\\*/\\n      )?\\n      \\\\s*\\n      [:)]                    # Ends with a colon or closed bracket\\n    )\\n  )\\n)\\n(?=\\\\s|$|[><:=]|\\\\)|/\\\\*)     # Terminates cleanly\"\n  },\n  \"media-feature-keywords\": {\n    match: \"(?xi)\\n(?<=^|\\\\s|:|\\\\*/)\\n(?: portrait                  # Orientation\\n  | landscape\\n  | progressive               # Scan types\\n  | interlace\\n  | fullscreen                # Display modes\\n  | standalone\\n  | minimal-ui\\n  | browser\\n  | hover\\n)\\n(?=\\\\s|\\\\)|$)\",\n    name: \"support.constant.property-value.css\"\n  },\n  \"media-query\": {\n    begin: \"\\\\G\",\n    end: \"(?=\\\\s*[{;])\",\n    patterns: [\n      {\n        include: \"#comment-block\"\n      },\n      {\n        include: \"#escapes\"\n      },\n      {\n        include: \"#media-types\"\n      },\n      {\n        match: \"(?i)(?<=\\\\s|^|,|\\\\*/)(only|not)(?=\\\\s|{|/\\\\*|$)\",\n        name: \"keyword.operator.logical.$1.media.css\"\n      },\n      {\n        match: \"(?i)(?<=\\\\s|^|\\\\*/|\\\\))and(?=\\\\s|/\\\\*|$)\",\n        name: \"keyword.operator.logical.and.media.css\"\n      },\n      {\n        match: \",(?:(?:\\\\s*,)+|(?=\\\\s*[;){]))\",\n        name: \"invalid.illegal.comma.css\"\n      },\n      {\n        include: \"#commas\"\n      },\n      {\n        begin: \"\\\\(\",\n        beginCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.parameters.begin.bracket.round.css\"\n          }\n        },\n        end: \"\\\\)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.parameters.end.bracket.round.css\"\n          }\n        },\n        patterns: [\n          {\n            include: \"#media-features\"\n          },\n          {\n            include: \"#media-feature-keywords\"\n          },\n          {\n            match: \":\",\n            name: \"punctuation.separator.key-value.css\"\n          },\n          {\n            match: \">=|<=|=|<|>\",\n            name: \"keyword.operator.comparison.css\"\n          },\n          {\n            captures: {\n              \"1\": {\n                name: \"constant.numeric.css\"\n              },\n              \"2\": {\n                name: \"keyword.operator.arithmetic.css\"\n              },\n              \"3\": {\n                name: \"constant.numeric.css\"\n              }\n            },\n            match: \"(\\\\d+)\\\\s*(/)\\\\s*(\\\\d+)\",\n            name: \"meta.ratio.css\"\n          },\n          {\n            include: \"#numeric-values\"\n          },\n          {\n            include: \"#comment-block\"\n          }\n        ]\n      }\n    ]\n  },\n  \"media-query-list\": {\n    begin: \"(?=\\\\s*[^{;])\",\n    end: \"(?=\\\\s*[{;])\",\n    patterns: [\n      {\n        include: \"#media-query\"\n      }\n    ]\n  },\n  \"media-types\": {\n    captures: {\n      \"1\": {\n        name: \"support.constant.media.css\"\n      },\n      \"2\": {\n        name: \"invalid.deprecated.constant.media.css\"\n      }\n    },\n    match: \"(?xi)\\n(?<=^|\\\\s|,|\\\\*/)\\n(?:\\n  # Valid media types\\n  (all|print|screen|speech)\\n  |\\n  # Deprecated in Media Queries 4: http://dev.w3.org/csswg/mediaqueries/#media-types\\n  (aural|braille|embossed|handheld|projection|tty|tv)\\n)\\n(?=$|[{,\\\\s;]|/\\\\*)\"\n  },\n  \"numeric-values\": {\n    patterns: [\n      {\n        captures: {\n          \"1\": {\n            name: \"punctuation.definition.constant.css\"\n          }\n        },\n        match: \"(#)(?:[0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})\\\\b\",\n        name: \"constant.other.color.rgb-value.hex.css\"\n      },\n      {\n        captures: {\n          \"1\": {\n            name: \"keyword.other.unit.percentage.css\"\n          },\n          \"2\": {\n            name: \"keyword.other.unit.${2:/downcase}.css\"\n          }\n        },\n        match: \"(?xi) (?<![\\\\w-])\\n[-+]?                               # Sign indicator\\n\\n(?:                                 # Numerals\\n    [0-9]+ (?:\\\\.[0-9]+)?           # Integer/float with leading digits\\n  | \\\\.[0-9]+                       # Float without leading digits\\n)\\n\\n(?:                                 # Scientific notation\\n  (?<=[0-9])                        # Exponent must follow a digit\\n  E                                 # Exponent indicator\\n  [-+]?                             # Possible sign indicator\\n  [0-9]+                            # Exponent value\\n)?\\n\\n(?:                                 # Possible unit for data-type:\\n  (%)                               # - Percentage\\n  | ( deg|grad|rad|turn             # - Angle\\n    | Hz|kHz                        # - Frequency\\n    | ch|cm|em|ex|fr|in|mm|mozmm|   # - Length\\n      pc|pt|px|q|rem|vh|vmax|vmin|\\n      vw\\n    | dpi|dpcm|dppx                 # - Resolution\\n    | s|ms                          # - Time\\n    )\\n  \\\\b                               # Boundary checking intentionally lax to\\n)?                                  # facilitate embedding in CSS-like grammars\",\n        name: \"constant.numeric.css\"\n      }\n    ]\n  },\n  \"property-keywords\": {\n    patterns: [\n      {\n        match: \"(?xi) (?<![\\\\w-])\\n(above|absolute|active|add|additive|after-edge|alias|all|all-petite-caps|all-scroll|all-small-caps|alpha|alphabetic|alternate|alternate-reverse\\n|always|antialiased|auto|auto-pos|available|avoid|avoid-column|avoid-page|avoid-region|backwards|balance|baseline|before-edge|below|bevel\\n|bidi-override|blink|block|block-axis|block-start|block-end|bold|bolder|border|border-box|both|bottom|bottom-outside|break-all|break-word|bullets\\n|butt|capitalize|caption|cell|center|central|char|circle|clip|clone|close-quote|closest-corner|closest-side|col-resize|collapse|color|color-burn\\n|color-dodge|column|column-reverse|common-ligatures|compact|condensed|contain|content|content-box|contents|context-menu|contextual|copy|cover\\n|crisp-edges|crispEdges|crosshair|cyclic|darken|dashed|decimal|default|dense|diagonal-fractions|difference|digits|disabled|disc|discretionary-ligatures\\n|distribute|distribute-all-lines|distribute-letter|distribute-space|dot|dotted|double|double-circle|downleft|downright|e-resize|each-line|ease|ease-in\\n|ease-in-out|ease-out|economy|ellipse|ellipsis|embed|end|evenodd|ew-resize|exact|exclude|exclusion|expanded|extends|extra-condensed|extra-expanded\\n|fallback|farthest-corner|farthest-side|fill|fill-available|fill-box|filled|fit-content|fixed|flat|flex|flex-end|flex-start|flip|flow-root|forwards|freeze\\n|from-image|full-width|geometricPrecision|georgian|grab|grabbing|grayscale|grid|groove|hand|hanging|hard-light|help|hidden|hide\\n|historical-forms|historical-ligatures|horizontal|horizontal-tb|hue|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\\n|ideographic|inactive|infinite|inherit|initial|inline|inline-axis|inline-block|inline-end|inline-flex|inline-grid|inline-list-item|inline-start\\n|inline-table|inset|inside|inter-character|inter-ideograph|inter-word|intersect|invert|isolate|isolate-override|italic|jis04|jis78|jis83\\n|jis90|justify|justify-all|kannada|keep-all|landscape|large|larger|left|lighten|lighter|line|line-edge|line-through|linear|linearRGB\\n|lining-nums|list-item|local|loose|lowercase|lr|lr-tb|ltr|luminance|luminosity|main-size|mandatory|manipulation|manual|margin-box|match-parent\\n|match-source|mathematical|max-content|medium|menu|message-box|middle|min-content|miter|mixed|move|multiply|n-resize|narrower|ne-resize\\n|nearest-neighbor|nesw-resize|newspaper|no-change|no-clip|no-close-quote|no-common-ligatures|no-contextual|no-discretionary-ligatures\\n|no-drop|no-historical-ligatures|no-open-quote|no-repeat|none|nonzero|normal|not-allowed|nowrap|ns-resize|numbers|numeric|nw-resize|nwse-resize\\n|oblique|oldstyle-nums|open|open-quote|optimizeLegibility|optimizeQuality|optimizeSpeed|optional|ordinal|outset|outside|over|overlay|overline|padding\\n|padding-box|page|painted|pan-down|pan-left|pan-right|pan-up|pan-x|pan-y|paused|petite-caps|pixelated|plaintext|pointer|portrait|pre|pre-line\\n|pre-wrap|preserve-3d|progress|progressive|proportional-nums|proportional-width|proximity|radial|recto|region|relative|remove|repeat|repeat-[xy]\\n|reset-size|reverse|revert|ridge|right|rl|rl-tb|round|row|row-resize|row-reverse|row-severse|rtl|ruby|ruby-base|ruby-base-container|ruby-text\\n|ruby-text-container|run-in|running|s-resize|saturation|scale-down|screen|scroll|scroll-position|se-resize|semi-condensed|semi-expanded|separate\\n|sesame|show|sideways|sideways-left|sideways-lr|sideways-right|sideways-rl|simplified|slashed-zero|slice|small|small-caps|small-caption|smaller\\n|smooth|soft-light|solid|space|space-around|space-between|space-evenly|spell-out|square|sRGB|stacked-fractions|start|static|status-bar|swap\\n|step-end|step-start|sticky|stretch|strict|stroke|stroke-box|style|sub|subgrid|subpixel-antialiased|subtract|super|sw-resize|symbolic|table\\n|table-caption|table-cell|table-column|table-column-group|table-footer-group|table-header-group|table-row|table-row-group|tabular-nums|tb|tb-rl\\n|text|text-after-edge|text-before-edge|text-bottom|text-top|thick|thin|titling-caps|top|top-outside|touch|traditional|transparent|triangle\\n|ultra-condensed|ultra-expanded|under|underline|unicase|unset|upleft|uppercase|upright|use-glyph-orientation|use-script|verso|vertical\\n|vertical-ideographic|vertical-lr|vertical-rl|vertical-text|view-box|visible|visibleFill|visiblePainted|visibleStroke|w-resize|wait|wavy\\n|weight|whitespace|wider|words|wrap|wrap-reverse|x|x-large|x-small|xx-large|xx-small|y|zero|zoom-in|zoom-out)\\n(?![\\\\w-])\",\n        name: \"support.constant.property-value.css\"\n      },\n      {\n        match: \"(?xi) (?<![\\\\w-])\\n(arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|cjk-ideographic\\n|decimal|decimal-leading-zero|devanagari|disc|disclosure-closed|disclosure-open|ethiopic-halehame-am\\n|ethiopic-halehame-ti-e[rt]|ethiopic-numeric|georgian|gujarati|gurmukhi|hangul|hangul-consonant|hebrew\\n|hiragana|hiragana-iroha|japanese-formal|japanese-informal|kannada|katakana|katakana-iroha|khmer\\n|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek\\n|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal\\n|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian\\n|upper-latin|upper-roman|urdu)\\n(?![\\\\w-])\",\n        name: \"support.constant.property-value.list-style-type.css\"\n      },\n      {\n        match: \"(?<![\\\\w-])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[a-zA-Z-]+\",\n        name: \"support.constant.vendored.property-value.css\"\n      },\n      {\n        match: \"(?<![\\\\w-])(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system-ui|system|tahoma|times|trebuchet|ui-monospace|ui-rounded|ui-sans-serif|ui-serif|utopia|verdana|webdings|sans-serif|serif|monospace)(?![\\\\w-])\",\n        name: \"support.constant.font-name.css\"\n      }\n    ]\n  },\n  \"property-names\": {\n    patterns: [\n      {\n        match: \"(?xi) (?<![\\\\w-])\\n(?:\\n  # Standard CSS\\n  additive-symbols|align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration\\n  | animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backdrop-filter\\n  | backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image\\n  | background-origin|background-position|background-position-[xy]|background-repeat|background-size|bleed|block-size|border\\n  | border-block-end|border-block-end-color|border-block-end-style|border-block-end-width|border-block-start|border-block-start-color\\n  | border-block-start-style|border-block-start-width|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius\\n  | border-bottom-style|border-bottom-width|border-collapse|border-color|border-end-end-radius|border-end-start-radius|border-image\\n  | border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-inline-end\\n  | border-inline-end-color|border-inline-end-style|border-inline-end-width|border-inline-start|border-inline-start-color\\n  | border-inline-start-style|border-inline-start-width|border-left|border-left-color|border-left-style|border-left-width\\n  | border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-start-end-radius\\n  | border-start-start-radius|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style\\n  | border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|break-after|break-before|break-inside|caption-side\\n  | caret-color|clear|clip|clip-path|clip-rule|color|color-adjust|color-interpolation-filters|column-count|column-fill|column-gap\\n  | column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|contain|content|counter-increment\\n  | counter-reset|cursor|direction|display|empty-cells|enable-background|fallback|fill|fill-opacity|fill-rule|filter|flex|flex-basis\\n  | flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|flood-color|flood-opacity|font|font-display|font-family\\n  | font-feature-settings|font-kerning|font-language-override|font-optical-sizing|font-size|font-size-adjust|font-stretch\\n  | font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures\\n  | font-variant-numeric|font-variant-position|font-variation-settings|font-weight|gap|glyph-orientation-horizontal|glyph-orientation-vertical\\n  | grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start\\n  | grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows\\n  | hanging-punctuation|height|hyphens|image-orientation|image-rendering|image-resolution|ime-mode|initial-letter|initial-letter-align\\n  | inline-size|inset|inset-block|inset-block-end|inset-block-start|inset-inline|inset-inline-end|inset-inline-start|isolation\\n  | justify-content|justify-items|justify-self|kerning|left|letter-spacing|lighting-color|line-break|line-clamp|line-height|list-style\\n  | list-style-image|list-style-position|list-style-type|margin|margin-block-end|margin-block-start|margin-bottom|margin-inline-end|margin-inline-start\\n  | margin-left|margin-right|margin-top|marker-end|marker-mid|marker-start|marks|mask|mask-border|mask-border-mode|mask-border-outset\\n  | mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode\\n  | mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-block-size|max-height|max-inline-size|max-lines|max-width\\n  | max-zoom|min-block-size|min-height|min-inline-size|min-width|min-zoom|mix-blend-mode|negative|object-fit|object-position\\n  | offset|offset-anchor|offset-distance|offset-path|offset-position|offset-rotation|opacity|order|orientation|orphans\\n  | outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-anchor|overflow-block|overflow-inline\\n  | overflow-wrap|overflow-[xy]|overscroll-behavior|overscroll-behavior-block|overscroll-behavior-inline|overscroll-behavior-[xy]\\n  | pad|padding|padding-block-end|padding-block-start|padding-bottom|padding-inline-end|padding-inline-start|padding-left\\n  | padding-right|padding-top|page-break-after|page-break-before|page-break-inside|paint-order|perspective|perspective-origin\\n  | place-content|place-items|place-self|pointer-events|position|prefix|quotes|range|resize|right|rotate|row-gap|ruby-align\\n  | ruby-merge|ruby-position|scale|scroll-behavior|scroll-margin|scroll-margin-block|scroll-margin-block-end|scroll-margin-block-start\\n  | scroll-margin-bottom|scroll-margin-inline|scroll-margin-inline-end|scroll-margin-inline-start|scroll-margin-left|scroll-margin-right\\n  | scroll-margin-top|scroll-padding|scroll-padding-block|scroll-padding-block-end|scroll-padding-block-start|scroll-padding-bottom\\n  | scroll-padding-inline|scroll-padding-inline-end|scroll-padding-inline-start|scroll-padding-left|scroll-padding-right\\n  | scroll-padding-top|scroll-snap-align|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-stop|scroll-snap-type\\n  | scrollbar-color|scrollbar-gutter|scrollbar-width|shape-image-threshold|shape-margin|shape-outside|shape-rendering|size\\n  | speak-as|src|stop-color|stop-opacity|stroke|stroke-dasharray|stroke-dashoffset|stroke-linecap|stroke-linejoin|stroke-miterlimit\\n  | stroke-opacity|stroke-width|suffix|symbols|system|tab-size|table-layout|text-align|text-align-last|text-anchor|text-combine-upright\\n  | text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-skip-ink|text-decoration-style\\n  | text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation\\n  | text-overflow|text-rendering|text-shadow|text-size-adjust|text-transform|text-underline-position|top|touch-action|transform\\n  | transform-box|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function\\n  | translate|unicode-bidi|unicode-range|user-select|user-zoom|vertical-align|visibility|white-space|widows|width|will-change\\n  | word-break|word-spacing|word-wrap|writing-mode|z-index|zoom\\n\\n  # SVG attributes\\n  | alignment-baseline|baseline-shift|clip-rule|color-interpolation|color-interpolation-filters|color-profile\\n  | color-rendering|cx|cy|dominant-baseline|enable-background|fill|fill-opacity|fill-rule|flood-color|flood-opacity\\n  | glyph-orientation-horizontal|glyph-orientation-vertical|height|kerning|lighting-color|marker-end|marker-mid\\n  | marker-start|r|rx|ry|shape-rendering|stop-color|stop-opacity|stroke|stroke-dasharray|stroke-dashoffset|stroke-linecap\\n  | stroke-linejoin|stroke-miterlimit|stroke-opacity|stroke-width|text-anchor|width|x|y\\n\\n  # Not listed on MDN; presumably deprecated\\n  | adjust|after|align|align-last|alignment|alignment-adjust|appearance|attachment|azimuth|background-break\\n  | balance|baseline|before|bidi|binding|bookmark|bookmark-label|bookmark-level|bookmark-target|border-length\\n  | bottom-color|bottom-left-radius|bottom-right-radius|bottom-style|bottom-width|box|box-align|box-direction\\n  | box-flex|box-flex-group|box-lines|box-ordinal-group|box-orient|box-pack|break|character|collapse|column\\n  | column-break-after|column-break-before|count|counter|crop|cue|cue-after|cue-before|decoration|decoration-break\\n  | delay|display-model|display-role|down|drop|drop-initial-after-adjust|drop-initial-after-align|drop-initial-before-adjust\\n  | drop-initial-before-align|drop-initial-size|drop-initial-value|duration|elevation|emphasis|family|fit|fit-position\\n  | flex-group|float-offset|gap|grid-columns|grid-rows|hanging-punctuation|header|hyphenate|hyphenate-after|hyphenate-before\\n  | hyphenate-character|hyphenate-lines|hyphenate-resource|icon|image|increment|indent|index|initial-after-adjust\\n  | initial-after-align|initial-before-adjust|initial-before-align|initial-size|initial-value|inline-box-align|iteration-count\\n  | justify|label|left-color|left-style|left-width|length|level|line|line-stacking|line-stacking-ruby|line-stacking-shift\\n  | line-stacking-strategy|lines|list|mark|mark-after|mark-before|marks|marquee|marquee-direction|marquee-play-count|marquee-speed\\n  | marquee-style|max|min|model|move-to|name|nav|nav-down|nav-index|nav-left|nav-right|nav-up|new|numeral|offset|ordinal-group\\n  | orient|origin|overflow-style|overhang|pack|page|page-policy|pause|pause-after|pause-before|phonemes|pitch|pitch-range\\n  | play-count|play-during|play-state|point|presentation|presentation-level|profile|property|punctuation|punctuation-trim\\n  | radius|rate|rendering-intent|repeat|replace|reset|resolution|resource|respond-to|rest|rest-after|rest-before|richness\\n  | right-color|right-style|right-width|role|rotation|rotation-point|rows|ruby|ruby-overhang|ruby-span|rule|rule-color\\n  | rule-style|rule-width|shadow|size|size-adjust|sizing|space|space-collapse|spacing|span|speak|speak-header|speak-numeral\\n  | speak-punctuation|speech|speech-rate|speed|stacking|stacking-ruby|stacking-shift|stacking-strategy|stress|stretch\\n  | string-set|style|style-image|style-position|style-type|target|target-name|target-new|target-position|text|text-height\\n  | text-justify|text-outline|text-replace|text-wrap|timing-function|top-color|top-left-radius|top-right-radius|top-style\\n  | top-width|trim|unicode|up|user-select|variant|voice|voice-balance|voice-duration|voice-family|voice-pitch|voice-pitch-range\\n  | voice-rate|voice-stress|voice-volume|volume|weight|white|white-space-collapse|word|wrap\\n)\\n(?![\\\\w-])\",\n        name: \"support.type.property-name.css\"\n      },\n      {\n        match: \"(?<![\\\\w-])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[a-zA-Z-]+\",\n        name: \"support.type.vendored.property-name.css\"\n      }\n    ]\n  },\n  \"property-values\": {\n    patterns: [\n      {\n        include: \"#commas\"\n      },\n      {\n        include: \"#comment-block\"\n      },\n      {\n        include: \"#escapes\"\n      },\n      {\n        include: \"#functions\"\n      },\n      {\n        include: \"#property-keywords\"\n      },\n      {\n        include: \"#unicode-range\"\n      },\n      {\n        include: \"#numeric-values\"\n      },\n      {\n        include: \"#color-keywords\"\n      },\n      {\n        include: \"#string\"\n      },\n      {\n        match: \"!\\\\s*important(?![\\\\w-])\",\n        name: \"keyword.other.important.css\"\n      }\n    ]\n  },\n  \"pseudo-classes\": {\n    captures: {\n      \"1\": {\n        name: \"punctuation.definition.entity.css\"\n      },\n      \"2\": {\n        name: \"invalid.illegal.colon.css\"\n      }\n    },\n    match: \"(?xi)\\n(:)(:*)\\n(?: active|any-link|checked|default|disabled|empty|enabled|first\\n  | (?:first|last|only)-(?:child|of-type)|focus|focus-visible|focus-within|fullscreen|host|hover\\n  | in-range|indeterminate|invalid|left|link|optional|out-of-range\\n  | read-only|read-write|required|right|root|scope|target|unresolved\\n  | valid|visited\\n)(?![\\\\w-]|\\\\s*[;}])\",\n    name: \"entity.other.attribute-name.pseudo-class.css\"\n  },\n  \"pseudo-elements\": {\n    captures: {\n      \"1\": {\n        name: \"punctuation.definition.entity.css\"\n      },\n      \"2\": {\n        name: \"punctuation.definition.entity.css\"\n      }\n    },\n    match: \"(?xi)\\n(?:\\n  (::?)                       # Elements using both : and :: notation\\n  (?: after\\n    | before\\n    | first-letter\\n    | first-line\\n    | (?:-(?:ah|apple|atsc|epub|hp|khtml|moz\\n            |ms|o|rim|ro|tc|wap|webkit|xv)\\n        | (?:mso|prince))\\n      -[a-z-]+\\n  )\\n  |\\n  (::)                        # Double-colon only\\n  (?: backdrop\\n    | content\\n    | grammar-error\\n    | marker\\n    | placeholder\\n    | selection\\n    | shadow\\n    | spelling-error\\n  )\\n)\\n(?![\\\\w-]|\\\\s*[;}])\",\n    name: \"entity.other.attribute-name.pseudo-element.css\"\n  },\n  \"rule-list\": {\n    begin: \"{\",\n    beginCaptures: {\n      \"0\": {\n        name: \"punctuation.section.property-list.begin.bracket.curly.css\"\n      }\n    },\n    end: \"}\",\n    endCaptures: {\n      \"0\": {\n        name: \"punctuation.section.property-list.end.bracket.curly.css\"\n      }\n    },\n    name: \"meta.property-list.css\",\n    patterns: [\n      {\n        include: \"#rule-list-innards\"\n      }\n    ]\n  },\n  \"rule-list-innards\": {\n    patterns: [\n      {\n        include: \"#comment-block\"\n      },\n      {\n        include: \"#escapes\"\n      },\n      {\n        include: \"#font-features\"\n      },\n      {\n        match: \"(?x) (?<![\\\\w-])\\n--\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\",\n        name: \"variable.css\"\n      },\n      {\n        begin: \"(?<![-a-zA-Z])(?=[-a-zA-Z])\",\n        end: \"$|(?![-a-zA-Z])\",\n        name: \"meta.property-name.css\",\n        patterns: [\n          {\n            include: \"#property-names\"\n          }\n        ]\n      },\n      {\n        begin: \"(:)\\\\s*\",\n        beginCaptures: {\n          \"1\": {\n            name: \"punctuation.separator.key-value.css\"\n          }\n        },\n        end: \"\\\\s*(;)|\\\\s*(?=}|\\\\))\",\n        endCaptures: {\n          \"1\": {\n            name: \"punctuation.terminator.rule.css\"\n          }\n        },\n        contentName: \"meta.property-value.css\",\n        patterns: [\n          {\n            include: \"#comment-block\"\n          },\n          {\n            include: \"#property-values\"\n          }\n        ]\n      },\n      {\n        match: \";\",\n        name: \"punctuation.terminator.rule.css\"\n      }\n    ]\n  },\n  selector: {\n    begin: \"(?x)\\n(?=\\n  (?:\\\\|)?                    # Possible anonymous namespace prefix\\n  (?:\\n    [-\\\\[:.*\\\\#a-zA-Z_]       # Valid selector character\\n    |\\n    [^\\\\x00-\\\\x7F]            # Which can include non-ASCII symbols\\n    |\\n    \\\\\\\\                      # Or an escape sequence\\n    (?:[0-9a-fA-F]{1,6}|.)\\n  )\\n)\",\n    end: \"(?=\\\\s*[/@{)])\",\n    name: \"meta.selector.css\",\n    patterns: [\n      {\n        include: \"#selector-innards\"\n      }\n    ]\n  },\n  \"selector-innards\": {\n    patterns: [\n      {\n        include: \"#comment-block\"\n      },\n      {\n        include: \"#commas\"\n      },\n      {\n        include: \"#escapes\"\n      },\n      {\n        include: \"#combinators\"\n      },\n      {\n        captures: {\n          \"1\": {\n            name: \"entity.other.namespace-prefix.css\"\n          },\n          \"2\": {\n            name: \"punctuation.separator.css\"\n          }\n        },\n        match: \"(?x)\\n(?:^|(?<=[\\\\s,(};]))         # Follows whitespace, comma, semicolon, or bracket\\n(?!\\n  [-\\\\w*]+\\n  \\\\|\\n  (?!\\n      [-\\\\[:.*\\\\#a-zA-Z_]    # Make sure there's a selector to match\\n    | [^\\\\x00-\\\\x7F]\\n  )\\n)\\n(\\n  (?: [-a-zA-Z_]    | [^\\\\x00-\\\\x7F] )   # First letter\\n  (?: [-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]     # Remainder of identifier\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n  )*\\n  |\\n  \\\\*     # Universal namespace\\n)?\\n(\\\\|)     # Namespace separator\"\n      },\n      {\n        include: \"#tag-names\"\n      },\n      {\n        match: \"\\\\*\",\n        name: \"entity.name.tag.wildcard.css\"\n      },\n      {\n        captures: {\n          \"1\": {\n            name: \"punctuation.definition.entity.css\"\n          },\n          \"2\": {\n            patterns: [\n              {\n                include: \"#escapes\"\n              }\n            ]\n          }\n        },\n        match: \"(?x) (?<![@\\\\w-])\\n([.\\\\#])\\n# Invalid identifier\\n(\\n  (?:\\n    # Starts with ASCII digits, with possible hyphen preceding it\\n    -?[0-9]\\n    |\\n    # Consists of a hyphen only\\n    -                                      # Terminated by either:\\n    (?= $                                  # - End-of-line\\n      | [\\\\s,.\\\\#)\\\\[:{>+~|]               # - Followed by another selector\\n      | /\\\\*                               # - Followed by a block comment\\n    )\\n    |\\n    # Name contains unescaped ASCII symbol\\n    (?:                                    # Check for acceptable preceding characters\\n        [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]       # - Valid selector character\\n      | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)         # - Escape sequence\\n    )*\\n    (?:                                    # Invalid punctuation\\n      [!\\\"'%&(*;<?@^`|\\\\]}]                 # - NOTE: We exempt `)` from the list of checked\\n      |                                    #   symbols to avoid matching `:not(.invalid)`\\n      / (?!\\\\*)                            # - Avoid invalidating the start of a comment\\n    )+\\n  )\\n  # Mark remainder of selector invalid\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]         # - Otherwise valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)           # - Escape sequence\\n  )*\\n)\",\n        name: \"invalid.illegal.bad-identifier.css\"\n      },\n      {\n        captures: {\n          \"1\": {\n            name: \"punctuation.definition.entity.css\"\n          },\n          \"2\": {\n            patterns: [\n              {\n                include: \"#escapes\"\n              }\n            ]\n          }\n        },\n        match: \"(?x)\\n(\\\\.)                                  # Valid class-name\\n(\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]     # Valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\\n  )+\\n)                                      # Followed by either:\\n(?= $                                  # - End of the line\\n  | [\\\\s,.\\\\#)\\\\[:{>+~|]               # - Another selector\\n  | /\\\\*                               # - A block comment\\n)\",\n        name: \"entity.other.attribute-name.class.css\"\n      },\n      {\n        captures: {\n          \"1\": {\n            name: \"punctuation.definition.entity.css\"\n          },\n          \"2\": {\n            patterns: [\n              {\n                include: \"#escapes\"\n              }\n            ]\n          }\n        },\n        match: \"(?x)\\n(\\\\#)\\n(\\n  -?\\n  (?![0-9])\\n  (?:[-a-zA-Z0-9_]|[^\\\\x00-\\\\x7F]|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+\\n)\\n(?=$|[\\\\s,.\\\\#)\\\\[:{>+~|]|/\\\\*)\",\n        name: \"entity.other.attribute-name.id.css\"\n      },\n      {\n        begin: \"\\\\[\",\n        beginCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.entity.begin.bracket.square.css\"\n          }\n        },\n        end: \"\\\\]\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.entity.end.bracket.square.css\"\n          }\n        },\n        name: \"meta.attribute-selector.css\",\n        patterns: [\n          {\n            include: \"#comment-block\"\n          },\n          {\n            include: \"#string\"\n          },\n          {\n            captures: {\n              \"1\": {\n                name: \"storage.modifier.ignore-case.css\"\n              }\n            },\n            match: `(?<=[\"'\\\\s]|^|\\\\*/)\\\\s*([iI])\\\\s*(?=[\\\\s\\\\]]|/\\\\*|$)`\n          },\n          {\n            captures: {\n              \"1\": {\n                name: \"string.unquoted.attribute-value.css\",\n                patterns: [\n                  {\n                    include: \"#escapes\"\n                  }\n                ]\n              }\n            },\n            match: `(?x)(?<==)\\\\s*((?!/\\\\*)(?:[^\\\\\\\\\"'\\\\s\\\\]]|\\\\\\\\.)+)`\n          },\n          {\n            include: \"#escapes\"\n          },\n          {\n            match: \"[~|^$*]?=\",\n            name: \"keyword.operator.pattern.css\"\n          },\n          {\n            match: \"\\\\|\",\n            name: \"punctuation.separator.css\"\n          },\n          {\n            captures: {\n              \"1\": {\n                name: \"entity.other.namespace-prefix.css\",\n                patterns: [\n                  {\n                    include: \"#escapes\"\n                  }\n                ]\n              }\n            },\n            match: \"(?x)\\n# Qualified namespace prefix\\n( -?(?!\\\\d)(?:[\\\\w-]|[^\\\\x00-\\\\x7F]|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+\\n| \\\\*\\n)\\n# Lookahead to ensure there's a valid identifier ahead\\n(?=\\n  \\\\| (?!\\\\s|=|$|\\\\])\\n  (?: -?(?!\\\\d)\\n   |   [\\\\\\\\\\\\w-]\\n   |   [^\\\\x00-\\\\x7F]\\n   )\\n)\"\n          },\n          {\n            captures: {\n              \"1\": {\n                name: \"entity.other.attribute-name.css\",\n                patterns: [\n                  {\n                    include: \"#escapes\"\n                  }\n                ]\n              }\n            },\n            match: \"(?x)\\n(-?(?!\\\\d)(?>[\\\\w-]|[^\\\\x00-\\\\x7F]|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+)\\n\\\\s*\\n(?=[~|^\\\\]$*=]|/\\\\*)\"\n          }\n        ]\n      },\n      {\n        include: \"#pseudo-classes\"\n      },\n      {\n        include: \"#pseudo-elements\"\n      },\n      {\n        include: \"#functional-pseudo-classes\"\n      },\n      {\n        match: \"(?x) (?<![@\\\\w-])\\n(?=            # Custom element names must:\\n  [a-z]        # - start with a lowercase ASCII letter,\\n  \\\\w* -       # - contain at least one dash\\n)\\n(?:\\n  (?![A-Z])    # No uppercase ASCII letters are allowed\\n  [\\\\w-]       # Allow any other word character or dash\\n)+\\n(?![(\\\\w-])\",\n        name: \"entity.name.tag.custom.css\"\n      }\n    ]\n  },\n  string: {\n    patterns: [\n      {\n        begin: '\"',\n        beginCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.string.begin.css\"\n          }\n        },\n        end: '\"|(?<!\\\\\\\\)(?=$|\\\\n)',\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.string.end.css\"\n          }\n        },\n        name: \"string.quoted.double.css\",\n        patterns: [\n          {\n            begin: '(?:\\\\G|^)(?=(?:[^\\\\\\\\\"]|\\\\\\\\.)+$)',\n            end: \"$\",\n            name: \"invalid.illegal.unclosed.string.css\",\n            patterns: [\n              {\n                include: \"#escapes\"\n              }\n            ]\n          },\n          {\n            include: \"#escapes\"\n          }\n        ]\n      },\n      {\n        begin: \"'\",\n        beginCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.string.begin.css\"\n          }\n        },\n        end: \"'|(?<!\\\\\\\\)(?=$|\\\\n)\",\n        endCaptures: {\n          \"0\": {\n            name: \"punctuation.definition.string.end.css\"\n          }\n        },\n        name: \"string.quoted.single.css\",\n        patterns: [\n          {\n            begin: \"(?:\\\\G|^)(?=(?:[^\\\\\\\\']|\\\\\\\\.)+$)\",\n            end: \"$\",\n            name: \"invalid.illegal.unclosed.string.css\",\n            patterns: [\n              {\n                include: \"#escapes\"\n              }\n            ]\n          },\n          {\n            include: \"#escapes\"\n          }\n        ]\n      }\n    ]\n  },\n  \"tag-names\": {\n    match: \"(?xi) (?<![\\\\w:-])\\n(?:\\n    # HTML\\n    a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|bgsound\\n  | big|blink|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command\\n  | content|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|element|em|embed|fieldset\\n  | figcaption|figure|font|footer|form|frame|frameset|h[1-6]|head|header|hgroup|hr|html|i\\n  | iframe|image|img|input|ins|isindex|kbd|keygen|label|legend|li|link|listing|main|map|mark\\n  | marquee|math|menu|menuitem|meta|meter|multicol|nav|nextid|nobr|noembed|noframes|noscript\\n  | object|ol|optgroup|option|output|p|param|picture|plaintext|pre|progress|q|rb|rp|rt|rtc\\n  | ruby|s|samp|script|section|select|shadow|slot|small|source|spacer|span|strike|strong\\n  | style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr\\n  | track|tt|u|ul|var|video|wbr|xmp\\n\\n  # SVG\\n  | altGlyph|altGlyphDef|altGlyphItem|animate|animateColor|animateMotion|animateTransform\\n  | circle|clipPath|color-profile|cursor|defs|desc|discard|ellipse|feBlend|feColorMatrix\\n  | feComponentTransfer|feComposite|feConvolveMatrix|feDiffuseLighting|feDisplacementMap\\n  | feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur\\n  | feImage|feMerge|feMergeNode|feMorphology|feOffset|fePointLight|feSpecularLighting\\n  | feSpotLight|feTile|feTurbulence|filter|font-face|font-face-format|font-face-name\\n  | font-face-src|font-face-uri|foreignObject|g|glyph|glyphRef|hatch|hatchpath|hkern\\n  | line|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|metadata\\n  | missing-glyph|mpath|path|pattern|polygon|polyline|radialGradient|rect|set|solidcolor\\n  | stop|svg|switch|symbol|text|textPath|tref|tspan|use|view|vkern\\n\\n  # MathML\\n  | annotation|annotation-xml|maction|maligngroup|malignmark|math|menclose|merror|mfenced\\n  | mfrac|mglyph|mi|mlabeledtr|mlongdiv|mmultiscripts|mn|mo|mover|mpadded|mphantom|mroot\\n  | mrow|ms|mscarries|mscarry|msgroup|msline|mspace|msqrt|msrow|mstack|mstyle|msub|msubsup\\n  | msup|mtable|mtd|mtext|mtr|munder|munderover|semantics\\n)\\n(?=[+~>\\\\s,.\\\\#|){:\\\\[]|/\\\\*|$)\",\n    name: \"entity.name.tag.css\"\n  },\n  \"unicode-range\": {\n    captures: {\n      \"0\": {\n        name: \"constant.other.unicode-range.css\"\n      },\n      \"1\": {\n        name: \"punctuation.separator.dash.unicode-range.css\"\n      }\n    },\n    match: \"(?<![\\\\w-])[Uu]\\\\+[0-9A-Fa-f?]{1,6}(?:(-)[0-9A-Fa-f]{1,6})?(?![\\\\w-])\"\n  },\n  url: {\n    begin: \"(?i)(?<![\\\\w@-])(url)(\\\\()\",\n    beginCaptures: {\n      \"1\": {\n        name: \"support.function.url.css\"\n      },\n      \"2\": {\n        name: \"punctuation.section.function.begin.bracket.round.css\"\n      }\n    },\n    end: \"\\\\)\",\n    endCaptures: {\n      \"0\": {\n        name: \"punctuation.section.function.end.bracket.round.css\"\n      }\n    },\n    name: \"meta.function.url.css\",\n    patterns: [\n      {\n        match: `[^'\")\\\\s]+`,\n        name: \"variable.parameter.url.css\"\n      },\n      {\n        include: \"#string\"\n      },\n      {\n        include: \"#comment-block\"\n      },\n      {\n        include: \"#escapes\"\n      }\n    ]\n  }\n};\nconst css_tmLanguage = {\n  information_for_contributors,\n  version,\n  name,\n  scopeName,\n  patterns,\n  repository\n};\n\nexport { css_tmLanguage as default, information_for_contributors, name, patterns, repository, scopeName, version };\n"],
  "mappings": "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",
  "names": []
}
