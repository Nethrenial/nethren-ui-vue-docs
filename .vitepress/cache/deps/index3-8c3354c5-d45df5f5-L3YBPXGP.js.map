{
  "version": 3,
  "sources": ["../../../node_modules/vite-plugin-vue-preview/dist/chunks/index3-8c3354c5-d45df5f5.js"],
  "sourcesContent": ["/**\n * name: vite-plugin-vue-preview\n * version: v2.0.0\n * description: a vite plugin for vue preview in markdown\n * author: liting <luz.liting@gmail.com>\n * homepage: https://vite-plugin-vue-preview.netlify.app\n */\nimport { c as commonjsGlobal, p as pathBrowserify, l as lib } from './VuePreview-bd3a2458.js';\nimport 'vue';\nimport 'vue/compiler-sfc';\nimport '@vueuse/core';\n\nvar dist = {};\n\nvar main$1 = {};\n\nvar registry = {};\n\nvar grammar = {};\n\nvar utils = {};\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(utils, \"__esModule\", { value: true });\nfunction clone(something) {\n    return doClone(something);\n}\nutils.clone = clone;\nfunction doClone(something) {\n    if (Array.isArray(something)) {\n        return cloneArray(something);\n    }\n    if (typeof something === 'object') {\n        return cloneObj(something);\n    }\n    return something;\n}\nfunction cloneArray(arr) {\n    var r = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n        r[i] = doClone(arr[i]);\n    }\n    return r;\n}\nfunction cloneObj(obj) {\n    var r = {};\n    for (var key in obj) {\n        r[key] = doClone(obj[key]);\n    }\n    return r;\n}\nfunction mergeObjects(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        for (var key in source) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n}\nutils.mergeObjects = mergeObjects;\nvar CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/;\nvar RegexSource = /** @class */ (function () {\n    function RegexSource() {\n    }\n    RegexSource.hasCaptures = function (regexSource) {\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\n    };\n    RegexSource.replaceCaptures = function (regexSource, captureSource, captureIndices) {\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, function (match, index, commandIndex, command) {\n            var capture = captureIndices[parseInt(index || commandIndex, 10)];\n            if (capture) {\n                var result = captureSource.substring(capture.start, capture.end);\n                // Remove leading dots that would make the selector invalid\n                while (result[0] === '.') {\n                    result = result.substring(1);\n                }\n                switch (command) {\n                    case 'downcase':\n                        return result.toLowerCase();\n                    case 'upcase':\n                        return result.toUpperCase();\n                    default:\n                        return result;\n                }\n            }\n            else {\n                return match;\n            }\n        });\n    };\n    return RegexSource;\n}());\nutils.RegexSource = RegexSource;\n\nvar rule = {};\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(rule, \"__esModule\", { value: true });\nvar path = pathBrowserify;\nvar utils_1$1 = utils;\nvar onigasm_1 = lib;\nvar HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nvar BACK_REFERENCING_END = /\\\\(\\d+)/g;\nvar Rule = /** @class */ (function () {\n    function Rule($location, id, name, contentName) {\n        this.$location = $location;\n        this.id = id;\n        this._name = name || null;\n        this._nameIsCapturing = utils_1$1.RegexSource.hasCaptures(this._name);\n        this._contentName = contentName || null;\n        this._contentNameIsCapturing = utils_1$1.RegexSource.hasCaptures(this._contentName);\n    }\n    Object.defineProperty(Rule.prototype, \"debugName\", {\n        get: function () {\n            return this.constructor.name + \"#\" + this.id + \" @ \" + path.basename(this.$location.filename) + \":\" + this.$location.line;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rule.prototype.getName = function (lineText, captureIndices) {\n        if (!this._nameIsCapturing) {\n            return this._name;\n        }\n        return utils_1$1.RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n    };\n    Rule.prototype.getContentName = function (lineText, captureIndices) {\n        if (!this._contentNameIsCapturing) {\n            return this._contentName;\n        }\n        return utils_1$1.RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n    };\n    Rule.prototype.collectPatternsRecursive = function (grammar, out, isFirst) {\n        throw new Error('Implement me!');\n    };\n    Rule.prototype.compile = function (grammar, endRegexSource, allowA, allowG) {\n        throw new Error('Implement me!');\n    };\n    return Rule;\n}());\nrule.Rule = Rule;\nvar CaptureRule = /** @class */ (function (_super) {\n    __extends(CaptureRule, _super);\n    function CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n        var _this = _super.call(this, $location, id, name, contentName) || this;\n        _this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n        return _this;\n    }\n    return CaptureRule;\n}(Rule));\nrule.CaptureRule = CaptureRule;\nvar RegExpSource = /** @class */ (function () {\n    function RegExpSource(regExpSource, ruleId, handleAnchors) {\n        if (handleAnchors === void 0) { handleAnchors = true; }\n        if (handleAnchors) {\n            this._handleAnchors(regExpSource);\n        }\n        else {\n            this.source = regExpSource;\n            this.hasAnchor = false;\n        }\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n        this.ruleId = ruleId;\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n    }\n    RegExpSource.prototype.clone = function () {\n        return new RegExpSource(this.source, this.ruleId, true);\n    };\n    RegExpSource.prototype.setSource = function (newSource) {\n        if (this.source === newSource) {\n            return;\n        }\n        this.source = newSource;\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n    };\n    RegExpSource.prototype._handleAnchors = function (regExpSource) {\n        if (regExpSource) {\n            var pos = void 0, len = void 0, ch = void 0, nextCh = void 0, lastPushedPos = 0, output = [];\n            var hasAnchor = false;\n            for (pos = 0, len = regExpSource.length; pos < len; pos++) {\n                ch = regExpSource.charAt(pos);\n                if (ch === '\\\\') {\n                    if (pos + 1 < len) {\n                        nextCh = regExpSource.charAt(pos + 1);\n                        if (nextCh === 'z') {\n                            output.push(regExpSource.substring(lastPushedPos, pos));\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\n                            lastPushedPos = pos + 2;\n                        }\n                        else if (nextCh === 'A' || nextCh === 'G') {\n                            hasAnchor = true;\n                        }\n                        pos++;\n                    }\n                }\n            }\n            this.hasAnchor = hasAnchor;\n            if (lastPushedPos === 0) {\n                // No \\z hit\n                this.source = regExpSource;\n            }\n            else {\n                output.push(regExpSource.substring(lastPushedPos, len));\n                this.source = output.join('');\n            }\n        }\n        else {\n            this.hasAnchor = false;\n            this.source = regExpSource;\n        }\n    };\n    RegExpSource.prototype.resolveBackReferences = function (lineText, captureIndices) {\n        var capturedValues = captureIndices.map(function (capture) {\n            return lineText.substring(capture.start, capture.end);\n        });\n        BACK_REFERENCING_END.lastIndex = 0;\n        return this.source.replace(BACK_REFERENCING_END, function (match, g1) {\n            return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n        });\n    };\n    RegExpSource.prototype._buildAnchorCache = function () {\n        var A0_G0_result = [];\n        var A0_G1_result = [];\n        var A1_G0_result = [];\n        var A1_G1_result = [];\n        var pos, len, ch, nextCh;\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\n            ch = this.source.charAt(pos);\n            A0_G0_result[pos] = ch;\n            A0_G1_result[pos] = ch;\n            A1_G0_result[pos] = ch;\n            A1_G1_result[pos] = ch;\n            if (ch === '\\\\') {\n                if (pos + 1 < len) {\n                    nextCh = this.source.charAt(pos + 1);\n                    if (nextCh === 'A') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = '\\uFFFF';\n                        A1_G0_result[pos + 1] = 'A';\n                        A1_G1_result[pos + 1] = 'A';\n                    }\n                    else if (nextCh === 'G') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = 'G';\n                        A1_G0_result[pos + 1] = '\\uFFFF';\n                        A1_G1_result[pos + 1] = 'G';\n                    }\n                    else {\n                        A0_G0_result[pos + 1] = nextCh;\n                        A0_G1_result[pos + 1] = nextCh;\n                        A1_G0_result[pos + 1] = nextCh;\n                        A1_G1_result[pos + 1] = nextCh;\n                    }\n                    pos++;\n                }\n            }\n        }\n        return {\n            A0_G0: A0_G0_result.join(''),\n            A0_G1: A0_G1_result.join(''),\n            A1_G0: A1_G0_result.join(''),\n            A1_G1: A1_G1_result.join('')\n        };\n    };\n    RegExpSource.prototype.resolveAnchors = function (allowA, allowG) {\n        if (!this.hasAnchor) {\n            return this.source;\n        }\n        if (allowA) {\n            if (allowG) {\n                return this._anchorCache.A1_G1;\n            }\n            else {\n                return this._anchorCache.A1_G0;\n            }\n        }\n        else {\n            if (allowG) {\n                return this._anchorCache.A0_G1;\n            }\n            else {\n                return this._anchorCache.A0_G0;\n            }\n        }\n    };\n    return RegExpSource;\n}());\nrule.RegExpSource = RegExpSource;\nfunction createOnigScanner(sources) {\n    return new onigasm_1.OnigScanner(sources);\n}\nfunction createOnigString(sources) {\n    var r = new onigasm_1.OnigString(sources);\n    r.$str = sources;\n    return r;\n}\nrule.createOnigString = createOnigString;\nfunction getString(str) {\n    return str.$str;\n}\nrule.getString = getString;\nvar RegExpSourceList = /** @class */ (function () {\n    function RegExpSourceList() {\n        this._items = [];\n        this._hasAnchors = false;\n        this._cached = null;\n        this._cachedSources = null;\n        this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    RegExpSourceList.prototype.push = function (item) {\n        this._items.push(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    };\n    RegExpSourceList.prototype.unshift = function (item) {\n        this._items.unshift(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    };\n    RegExpSourceList.prototype.length = function () {\n        return this._items.length;\n    };\n    RegExpSourceList.prototype.setSource = function (index, newSource) {\n        if (this._items[index].source !== newSource) {\n            // bust the cache\n            this._cached = null;\n            this._anchorCache.A0_G0 = null;\n            this._anchorCache.A0_G1 = null;\n            this._anchorCache.A1_G0 = null;\n            this._anchorCache.A1_G1 = null;\n            this._items[index].setSource(newSource);\n        }\n    };\n    RegExpSourceList.prototype.compile = function (grammar, allowA, allowG) {\n        if (!this._hasAnchors) {\n            if (!this._cached) {\n                var regExps = this._items.map(function (e) { return e.source; });\n                this._cached = {\n                    scanner: createOnigScanner(regExps),\n                    rules: this._items.map(function (e) { return e.ruleId; }),\n                    debugRegExps: regExps\n                };\n            }\n            return this._cached;\n        }\n        else {\n            this._anchorCache = {\n                A0_G0: this._anchorCache.A0_G0 || (allowA === false && allowG === false ? this._resolveAnchors(allowA, allowG) : null),\n                A0_G1: this._anchorCache.A0_G1 || (allowA === false && allowG === true ? this._resolveAnchors(allowA, allowG) : null),\n                A1_G0: this._anchorCache.A1_G0 || (allowA === true && allowG === false ? this._resolveAnchors(allowA, allowG) : null),\n                A1_G1: this._anchorCache.A1_G1 || (allowA === true && allowG === true ? this._resolveAnchors(allowA, allowG) : null),\n            };\n            if (allowA) {\n                if (allowG) {\n                    return this._anchorCache.A1_G1;\n                }\n                else {\n                    return this._anchorCache.A1_G0;\n                }\n            }\n            else {\n                if (allowG) {\n                    return this._anchorCache.A0_G1;\n                }\n                else {\n                    return this._anchorCache.A0_G0;\n                }\n            }\n        }\n    };\n    RegExpSourceList.prototype._resolveAnchors = function (allowA, allowG) {\n        var regExps = this._items.map(function (e) { return e.resolveAnchors(allowA, allowG); });\n        return {\n            scanner: createOnigScanner(regExps),\n            rules: this._items.map(function (e) { return e.ruleId; }),\n            debugRegExps: regExps\n        };\n    };\n    return RegExpSourceList;\n}());\nrule.RegExpSourceList = RegExpSourceList;\nvar MatchRule = /** @class */ (function (_super) {\n    __extends(MatchRule, _super);\n    function MatchRule($location, id, name, match, captures) {\n        var _this = _super.call(this, $location, id, name, null) || this;\n        _this._match = new RegExpSource(match, _this.id);\n        _this.captures = captures;\n        _this._cachedCompiledPatterns = null;\n        return _this;\n    }\n    Object.defineProperty(MatchRule.prototype, \"debugMatchRegExp\", {\n        get: function () {\n            return \"\" + this._match.source;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatchRule.prototype.collectPatternsRecursive = function (grammar, out, isFirst) {\n        out.push(this._match);\n    };\n    MatchRule.prototype.compile = function (grammar, endRegexSource, allowA, allowG) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\n        }\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\n    };\n    return MatchRule;\n}(Rule));\nrule.MatchRule = MatchRule;\nvar IncludeOnlyRule = /** @class */ (function (_super) {\n    __extends(IncludeOnlyRule, _super);\n    function IncludeOnlyRule($location, id, name, contentName, patterns) {\n        var _this = _super.call(this, $location, id, name, contentName) || this;\n        _this.patterns = patterns.patterns;\n        _this.hasMissingPatterns = patterns.hasMissingPatterns;\n        _this._cachedCompiledPatterns = null;\n        return _this;\n    }\n    IncludeOnlyRule.prototype.collectPatternsRecursive = function (grammar, out, isFirst) {\n        var i, len, rule;\n        for (i = 0, len = this.patterns.length; i < len; i++) {\n            rule = grammar.getRule(this.patterns[i]);\n            rule.collectPatternsRecursive(grammar, out, false);\n        }\n    };\n    IncludeOnlyRule.prototype.compile = function (grammar, endRegexSource, allowA, allowG) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\n        }\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\n    };\n    return IncludeOnlyRule;\n}(Rule));\nrule.IncludeOnlyRule = IncludeOnlyRule;\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nvar BeginEndRule = /** @class */ (function (_super) {\n    __extends(BeginEndRule, _super);\n    function BeginEndRule($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n        var _this = _super.call(this, $location, id, name, contentName) || this;\n        _this._begin = new RegExpSource(begin, _this.id);\n        _this.beginCaptures = beginCaptures;\n        _this._end = new RegExpSource(end, -1);\n        _this.endHasBackReferences = _this._end.hasBackReferences;\n        _this.endCaptures = endCaptures;\n        _this.applyEndPatternLast = applyEndPatternLast || false;\n        _this.patterns = patterns.patterns;\n        _this.hasMissingPatterns = patterns.hasMissingPatterns;\n        _this._cachedCompiledPatterns = null;\n        return _this;\n    }\n    Object.defineProperty(BeginEndRule.prototype, \"debugBeginRegExp\", {\n        get: function () {\n            return \"\" + this._begin.source;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginEndRule.prototype, \"debugEndRegExp\", {\n        get: function () {\n            return \"\" + this._end.source;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BeginEndRule.prototype.getEndWithResolvedBackReferences = function (lineText, captureIndices) {\n        return this._end.resolveBackReferences(lineText, captureIndices);\n    };\n    BeginEndRule.prototype.collectPatternsRecursive = function (grammar, out, isFirst) {\n        if (isFirst) {\n            var i = void 0, len = void 0, rule = void 0;\n            for (i = 0, len = this.patterns.length; i < len; i++) {\n                rule = grammar.getRule(this.patterns[i]);\n                rule.collectPatternsRecursive(grammar, out, false);\n            }\n        }\n        else {\n            out.push(this._begin);\n        }\n    };\n    BeginEndRule.prototype.compile = function (grammar, endRegexSource, allowA, allowG) {\n        var precompiled = this._precompile(grammar);\n        if (this._end.hasBackReferences) {\n            if (this.applyEndPatternLast) {\n                precompiled.setSource(precompiled.length() - 1, endRegexSource);\n            }\n            else {\n                precompiled.setSource(0, endRegexSource);\n            }\n        }\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\n    };\n    BeginEndRule.prototype._precompile = function (grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n            else {\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    };\n    return BeginEndRule;\n}(Rule));\nrule.BeginEndRule = BeginEndRule;\nvar BeginWhileRule = /** @class */ (function (_super) {\n    __extends(BeginWhileRule, _super);\n    function BeginWhileRule($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n        var _this = _super.call(this, $location, id, name, contentName) || this;\n        _this._begin = new RegExpSource(begin, _this.id);\n        _this.beginCaptures = beginCaptures;\n        _this.whileCaptures = whileCaptures;\n        _this._while = new RegExpSource(_while, -2);\n        _this.whileHasBackReferences = _this._while.hasBackReferences;\n        _this.patterns = patterns.patterns;\n        _this.hasMissingPatterns = patterns.hasMissingPatterns;\n        _this._cachedCompiledPatterns = null;\n        _this._cachedCompiledWhilePatterns = null;\n        return _this;\n    }\n    BeginWhileRule.prototype.getWhileWithResolvedBackReferences = function (lineText, captureIndices) {\n        return this._while.resolveBackReferences(lineText, captureIndices);\n    };\n    BeginWhileRule.prototype.collectPatternsRecursive = function (grammar, out, isFirst) {\n        if (isFirst) {\n            var i = void 0, len = void 0, rule = void 0;\n            for (i = 0, len = this.patterns.length; i < len; i++) {\n                rule = grammar.getRule(this.patterns[i]);\n                rule.collectPatternsRecursive(grammar, out, false);\n            }\n        }\n        else {\n            out.push(this._begin);\n        }\n    };\n    BeginWhileRule.prototype.compile = function (grammar, endRegexSource, allowA, allowG) {\n        this._precompile(grammar);\n        return this._cachedCompiledPatterns.compile(grammar, allowA, allowG);\n    };\n    BeginWhileRule.prototype._precompile = function (grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatternsRecursive(grammar, this._cachedCompiledPatterns, true);\n        }\n    };\n    BeginWhileRule.prototype.compileWhile = function (grammar, endRegexSource, allowA, allowG) {\n        this._precompileWhile(grammar);\n        if (this._while.hasBackReferences) {\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource);\n        }\n        return this._cachedCompiledWhilePatterns.compile(grammar, allowA, allowG);\n    };\n    BeginWhileRule.prototype._precompileWhile = function (grammar) {\n        if (!this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n        }\n    };\n    return BeginWhileRule;\n}(Rule));\nrule.BeginWhileRule = BeginWhileRule;\nvar RuleFactory = /** @class */ (function () {\n    function RuleFactory() {\n    }\n    RuleFactory.createCaptureRule = function (helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n        return helper.registerRule(function (id) {\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n        });\n    };\n    RuleFactory.getCompiledRuleId = function (desc, helper, repository) {\n        if (!desc.id) {\n            helper.registerRule(function (id) {\n                desc.id = id;\n                if (desc.match) {\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n                }\n                if (!desc.begin) {\n                    if (desc.repository) {\n                        repository = utils_1$1.mergeObjects({}, repository, desc.repository);\n                    }\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                if (desc.while) {\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n            });\n        }\n        return desc.id;\n    };\n    RuleFactory._compileCaptures = function (captures, helper, repository) {\n        var r = [], numericCaptureId, maximumCaptureId, i, captureId;\n        if (captures) {\n            // Find the maximum capture id\n            maximumCaptureId = 0;\n            for (captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                numericCaptureId = parseInt(captureId, 10);\n                if (numericCaptureId > maximumCaptureId) {\n                    maximumCaptureId = numericCaptureId;\n                }\n            }\n            // Initialize result\n            for (i = 0; i <= maximumCaptureId; i++) {\n                r[i] = null;\n            }\n            // Fill out result\n            for (captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                numericCaptureId = parseInt(captureId, 10);\n                var retokenizeCapturedWithRuleId = 0;\n                if (captures[captureId].patterns) {\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n                }\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n            }\n        }\n        return r;\n    };\n    RuleFactory._compilePatterns = function (patterns, helper, repository) {\n        var r = [], pattern, i, len, patternId, externalGrammar, rule, skipRule;\n        if (patterns) {\n            for (i = 0, len = patterns.length; i < len; i++) {\n                pattern = patterns[i];\n                patternId = -1;\n                if (pattern.include) {\n                    if (pattern.include.charAt(0) === '#') {\n                        // Local include found in `repository`\n                        var localIncludedRule = repository[pattern.include.substr(1)];\n                        if (localIncludedRule) {\n                            patternId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n                        }\n                    }\n                    else if (pattern.include === '$base' || pattern.include === '$self') {\n                        // Special include also found in `repository`\n                        patternId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n                    }\n                    else {\n                        var externalGrammarName = null, externalGrammarInclude = null, sharpIndex = pattern.include.indexOf('#');\n                        if (sharpIndex >= 0) {\n                            externalGrammarName = pattern.include.substring(0, sharpIndex);\n                            externalGrammarInclude = pattern.include.substring(sharpIndex + 1);\n                        }\n                        else {\n                            externalGrammarName = pattern.include;\n                        }\n                        // External include\n                        externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n                        if (externalGrammar) {\n                            if (externalGrammarInclude) {\n                                var externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                                if (externalIncludedRule) {\n                                    patternId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                                }\n                            }\n                            else {\n                                patternId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                            }\n                        }\n                    }\n                }\n                else {\n                    patternId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n                }\n                if (patternId !== -1) {\n                    rule = helper.getRule(patternId);\n                    skipRule = false;\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n                            skipRule = true;\n                        }\n                    }\n                    if (skipRule) {\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n                        continue;\n                    }\n                    r.push(patternId);\n                }\n            }\n        }\n        return {\n            patterns: r,\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\n        };\n    };\n    return RuleFactory;\n}());\nrule.RuleFactory = RuleFactory;\n\nvar matcher = {};\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(matcher, \"__esModule\", { value: true });\nfunction createMatchers(selector, matchesName) {\n    var results = [];\n    var tokenizer = newTokenizer(selector);\n    var token = tokenizer.next();\n    while (token !== null) {\n        var priority = 0;\n        if (token.length === 2 && token.charAt(1) === ':') {\n            switch (token.charAt(0)) {\n                case 'R':\n                    priority = 1;\n                    break;\n                case 'L':\n                    priority = -1;\n                    break;\n                default:\n                    console.log(\"Unknown priority \" + token + \" in scope selector\");\n            }\n            token = tokenizer.next();\n        }\n        var matcher = parseConjunction();\n        if (matcher) {\n            results.push({ matcher: matcher, priority: priority });\n        }\n        if (token !== ',') {\n            break;\n        }\n        token = tokenizer.next();\n    }\n    return results;\n    function parseOperand() {\n        if (token === '-') {\n            token = tokenizer.next();\n            var expressionToNegate = parseOperand();\n            return function (matcherInput) { return expressionToNegate && !expressionToNegate(matcherInput); };\n        }\n        if (token === '(') {\n            token = tokenizer.next();\n            var expressionInParents = parseInnerExpression();\n            if (token === ')') {\n                token = tokenizer.next();\n            }\n            return expressionInParents;\n        }\n        if (isIdentifier(token)) {\n            var identifiers = [];\n            do {\n                identifiers.push(token);\n                token = tokenizer.next();\n            } while (isIdentifier(token));\n            return function (matcherInput) { return matchesName(identifiers, matcherInput); };\n        }\n        return null;\n    }\n    function parseConjunction() {\n        var matchers = [];\n        var matcher = parseOperand();\n        while (matcher) {\n            matchers.push(matcher);\n            matcher = parseOperand();\n        }\n        return function (matcherInput) { return matchers.every(function (matcher) { return matcher(matcherInput); }); }; // and\n    }\n    function parseInnerExpression() {\n        var matchers = [];\n        var matcher = parseConjunction();\n        while (matcher) {\n            matchers.push(matcher);\n            if (token === '|' || token === ',') {\n                do {\n                    token = tokenizer.next();\n                } while (token === '|' || token === ','); // ignore subsequent commas\n            }\n            else {\n                break;\n            }\n            matcher = parseConjunction();\n        }\n        return function (matcherInput) { return matchers.some(function (matcher) { return matcher(matcherInput); }); }; // or\n    }\n}\nmatcher.createMatchers = createMatchers;\nfunction isIdentifier(token) {\n    return token && token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n    var regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n    var match = regex.exec(input);\n    return {\n        next: function () {\n            if (!match) {\n                return null;\n            }\n            var res = match[0];\n            match = regex.exec(input);\n            return res;\n        }\n    };\n}\n\nvar debug = {};\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(debug, \"__esModule\", { value: true });\ndebug.CAPTURE_METADATA = typeof process === 'undefined' ? false : !!process.env['VSCODE_TEXTMATE_DEBUG'];\ndebug.IN_DEBUG_MODE = typeof process === 'undefined' ? false : !!process.env['VSCODE_TEXTMATE_DEBUG'];\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(grammar, \"__esModule\", { value: true });\nvar utils_1 = utils;\nvar rule_1 = rule;\nvar matcher_1 = matcher;\nvar debug_1$1 = debug;\nfunction createGrammar(grammar, initialLanguage, embeddedLanguages, tokenTypes, grammarRepository) {\n    return new Grammar(grammar, initialLanguage, embeddedLanguages, tokenTypes, grammarRepository);\n}\ngrammar.createGrammar = createGrammar;\n/**\n * Fill in `result` all external included scopes in `patterns`\n */\nfunction _extractIncludedScopesInPatterns(result, patterns) {\n    for (var i = 0, len = patterns.length; i < len; i++) {\n        if (Array.isArray(patterns[i].patterns)) {\n            _extractIncludedScopesInPatterns(result, patterns[i].patterns);\n        }\n        var include = patterns[i].include;\n        if (!include) {\n            continue;\n        }\n        if (include === '$base' || include === '$self') {\n            // Special includes that can be resolved locally in this grammar\n            continue;\n        }\n        if (include.charAt(0) === '#') {\n            // Local include from this grammar\n            continue;\n        }\n        var sharpIndex = include.indexOf('#');\n        if (sharpIndex >= 0) {\n            result[include.substring(0, sharpIndex)] = true;\n        }\n        else {\n            result[include] = true;\n        }\n    }\n}\n/**\n * Fill in `result` all external included scopes in `repository`\n */\nfunction _extractIncludedScopesInRepository(result, repository) {\n    for (var name in repository) {\n        var rule = repository[name];\n        if (rule.patterns && Array.isArray(rule.patterns)) {\n            _extractIncludedScopesInPatterns(result, rule.patterns);\n        }\n        if (rule.repository) {\n            _extractIncludedScopesInRepository(result, rule.repository);\n        }\n    }\n}\n/**\n * Collects the list of all external included scopes in `grammar`.\n */\nfunction collectIncludedScopes(result, grammar) {\n    if (grammar.patterns && Array.isArray(grammar.patterns)) {\n        _extractIncludedScopesInPatterns(result, grammar.patterns);\n    }\n    if (grammar.repository) {\n        _extractIncludedScopesInRepository(result, grammar.repository);\n    }\n    // remove references to own scope (avoid recursion)\n    delete result[grammar.scopeName];\n}\ngrammar.collectIncludedScopes = collectIncludedScopes;\nfunction scopesAreMatching(thisScopeName, scopeName) {\n    if (!thisScopeName) {\n        return false;\n    }\n    if (thisScopeName === scopeName) {\n        return true;\n    }\n    var len = scopeName.length;\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nfunction nameMatcher(identifers, scopes) {\n    if (scopes.length < identifers.length) {\n        return false;\n    }\n    var lastIndex = 0;\n    return identifers.every(function (identifier) {\n        for (var i = lastIndex; i < scopes.length; i++) {\n            if (scopesAreMatching(scopes[i], identifier)) {\n                lastIndex = i + 1;\n                return true;\n            }\n        }\n        return false;\n    });\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n    var matchers = matcher_1.createMatchers(selector, nameMatcher);\n    var ruleId = rule_1.RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n    for (var _i = 0, matchers_1 = matchers; _i < matchers_1.length; _i++) {\n        var matcher = matchers_1[_i];\n        result.push({\n            matcher: matcher.matcher,\n            ruleId: ruleId,\n            grammar: grammar,\n            priority: matcher.priority\n        });\n    }\n}\nvar ScopeMetadata = /** @class */ (function () {\n    function ScopeMetadata(scopeName, languageId, tokenType, themeData) {\n        this.scopeName = scopeName;\n        this.languageId = languageId;\n        this.tokenType = tokenType;\n        this.themeData = themeData;\n    }\n    return ScopeMetadata;\n}());\ngrammar.ScopeMetadata = ScopeMetadata;\nvar ScopeMetadataProvider = /** @class */ (function () {\n    function ScopeMetadataProvider(initialLanguage, themeProvider, embeddedLanguages) {\n        this._initialLanguage = initialLanguage;\n        this._themeProvider = themeProvider;\n        this.onDidChangeTheme();\n        // embeddedLanguages handling\n        this._embeddedLanguages = Object.create(null);\n        if (embeddedLanguages) {\n            // If embeddedLanguages are configured, fill in `this._embeddedLanguages`\n            var scopes = Object.keys(embeddedLanguages);\n            for (var i = 0, len = scopes.length; i < len; i++) {\n                var scope = scopes[i];\n                var language = embeddedLanguages[scope];\n                if (typeof language !== 'number' || language === 0) {\n                    console.warn('Invalid embedded language found at scope ' + scope + ': <<' + language + '>>');\n                    // never hurts to be too careful\n                    continue;\n                }\n                this._embeddedLanguages[scope] = language;\n            }\n        }\n        // create the regex\n        var escapedScopes = Object.keys(this._embeddedLanguages).map(function (scopeName) { return ScopeMetadataProvider._escapeRegExpCharacters(scopeName); });\n        if (escapedScopes.length === 0) {\n            // no scopes registered\n            this._embeddedLanguagesRegex = null;\n        }\n        else {\n            escapedScopes.sort();\n            escapedScopes.reverse();\n            this._embeddedLanguagesRegex = new RegExp(\"^((\" + escapedScopes.join(')|(') + \"))($|\\\\.)\", '');\n        }\n    }\n    ScopeMetadataProvider.prototype.onDidChangeTheme = function () {\n        this._cache = Object.create(null);\n        this._defaultMetaData = new ScopeMetadata('', this._initialLanguage, 0 /* Other */, [this._themeProvider.getDefaults()]);\n    };\n    ScopeMetadataProvider.prototype.getDefaultMetadata = function () {\n        return this._defaultMetaData;\n    };\n    /**\n     * Escapes regular expression characters in a given string\n     */\n    ScopeMetadataProvider._escapeRegExpCharacters = function (value) {\n        return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n    };\n    ScopeMetadataProvider.prototype.getMetadataForScope = function (scopeName) {\n        if (scopeName === null) {\n            return ScopeMetadataProvider._NULL_SCOPE_METADATA;\n        }\n        var value = this._cache[scopeName];\n        if (value) {\n            return value;\n        }\n        value = this._doGetMetadataForScope(scopeName);\n        this._cache[scopeName] = value;\n        return value;\n    };\n    ScopeMetadataProvider.prototype._doGetMetadataForScope = function (scopeName) {\n        var languageId = this._scopeToLanguage(scopeName);\n        var standardTokenType = this._toStandardTokenType(scopeName);\n        var themeData = this._themeProvider.themeMatch(scopeName);\n        return new ScopeMetadata(scopeName, languageId, standardTokenType, themeData);\n    };\n    /**\n     * Given a produced TM scope, return the language that token describes or null if unknown.\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n     */\n    ScopeMetadataProvider.prototype._scopeToLanguage = function (scope) {\n        if (!scope) {\n            return 0;\n        }\n        if (!this._embeddedLanguagesRegex) {\n            // no scopes registered\n            return 0;\n        }\n        var m = scope.match(this._embeddedLanguagesRegex);\n        if (!m) {\n            // no scopes matched\n            return 0;\n        }\n        var language = this._embeddedLanguages[m[1]] || 0;\n        if (!language) {\n            return 0;\n        }\n        return language;\n    };\n    ScopeMetadataProvider.prototype._toStandardTokenType = function (tokenType) {\n        var m = tokenType.match(ScopeMetadataProvider.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!m) {\n            return 0 /* Other */;\n        }\n        switch (m[1]) {\n            case 'comment':\n                return 1 /* Comment */;\n            case 'string':\n                return 2 /* String */;\n            case 'regex':\n                return 4 /* RegEx */;\n            case 'meta.embedded':\n                return 8 /* MetaEmbedded */;\n        }\n        throw new Error('Unexpected match for standard token type!');\n    };\n    ScopeMetadataProvider._NULL_SCOPE_METADATA = new ScopeMetadata('', 0, 0, null);\n    ScopeMetadataProvider.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\n    return ScopeMetadataProvider;\n}());\nvar Grammar = /** @class */ (function () {\n    function Grammar(grammar, initialLanguage, embeddedLanguages, tokenTypes, grammarRepository) {\n        this._scopeMetadataProvider = new ScopeMetadataProvider(initialLanguage, grammarRepository, embeddedLanguages);\n        this._rootId = -1;\n        this._lastRuleId = 0;\n        this._ruleId2desc = [];\n        this._includedGrammars = {};\n        this._grammarRepository = grammarRepository;\n        this._grammar = initGrammar(grammar, null);\n        this._tokenTypeMatchers = [];\n        if (tokenTypes) {\n            for (var _i = 0, _a = Object.keys(tokenTypes); _i < _a.length; _i++) {\n                var selector = _a[_i];\n                var matchers = matcher_1.createMatchers(selector, nameMatcher);\n                for (var _b = 0, matchers_2 = matchers; _b < matchers_2.length; _b++) {\n                    var matcher = matchers_2[_b];\n                    this._tokenTypeMatchers.push({\n                        matcher: matcher.matcher,\n                        type: tokenTypes[selector]\n                    });\n                }\n            }\n        }\n    }\n    Grammar.prototype.onDidChangeTheme = function () {\n        this._scopeMetadataProvider.onDidChangeTheme();\n    };\n    Grammar.prototype.getMetadataForScope = function (scope) {\n        return this._scopeMetadataProvider.getMetadataForScope(scope);\n    };\n    Grammar.prototype.getInjections = function () {\n        var _this = this;\n        if (!this._injections) {\n            this._injections = [];\n            // add injections from the current grammar\n            var rawInjections = this._grammar.injections;\n            if (rawInjections) {\n                for (var expression in rawInjections) {\n                    collectInjections(this._injections, expression, rawInjections[expression], this, this._grammar);\n                }\n            }\n            // add injection grammars contributed for the current scope\n            if (this._grammarRepository) {\n                var injectionScopeNames = this._grammarRepository.injections(this._grammar.scopeName);\n                if (injectionScopeNames) {\n                    injectionScopeNames.forEach(function (injectionScopeName) {\n                        var injectionGrammar = _this.getExternalGrammar(injectionScopeName);\n                        if (injectionGrammar) {\n                            var selector = injectionGrammar.injectionSelector;\n                            if (selector) {\n                                collectInjections(_this._injections, selector, injectionGrammar, _this, injectionGrammar);\n                            }\n                        }\n                    });\n                }\n            }\n            this._injections.sort(function (i1, i2) { return i1.priority - i2.priority; }); // sort by priority\n        }\n        if (this._injections.length === 0) {\n            return this._injections;\n        }\n        return this._injections;\n    };\n    Grammar.prototype.registerRule = function (factory) {\n        var id = (++this._lastRuleId);\n        var result = factory(id);\n        this._ruleId2desc[id] = result;\n        return result;\n    };\n    Grammar.prototype.getRule = function (patternId) {\n        return this._ruleId2desc[patternId];\n    };\n    Grammar.prototype.getExternalGrammar = function (scopeName, repository) {\n        if (this._includedGrammars[scopeName]) {\n            return this._includedGrammars[scopeName];\n        }\n        else if (this._grammarRepository) {\n            var rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n            if (rawIncludedGrammar) {\n                // console.log('LOADED GRAMMAR ' + pattern.include);\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n                return this._includedGrammars[scopeName];\n            }\n        }\n    };\n    Grammar.prototype.tokenizeLine = function (lineText, prevState) {\n        var r = this._tokenize(lineText, prevState, false);\n        return {\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack\n        };\n    };\n    Grammar.prototype.tokenizeLine2 = function (lineText, prevState) {\n        var r = this._tokenize(lineText, prevState, true);\n        return {\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack\n        };\n    };\n    Grammar.prototype._tokenize = function (lineText, prevState, emitBinaryTokens) {\n        if (this._rootId === -1) {\n            this._rootId = rule_1.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n        }\n        var isFirstLine;\n        if (!prevState || prevState === StackElement.NULL) {\n            isFirstLine = true;\n            var rawDefaultMetadata = this._scopeMetadataProvider.getDefaultMetadata();\n            var defaultTheme = rawDefaultMetadata.themeData[0];\n            var defaultMetadata = StackElementMetadata.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, defaultTheme.fontStyle, defaultTheme.foreground, defaultTheme.background);\n            var rootScopeName = this.getRule(this._rootId).getName(null, null);\n            var rawRootMetadata = this._scopeMetadataProvider.getMetadataForScope(rootScopeName);\n            var rootMetadata = ScopeListElement.mergeMetadata(defaultMetadata, null, rawRootMetadata);\n            var scopeList = new ScopeListElement(null, rootScopeName, rootMetadata);\n            prevState = new StackElement(null, this._rootId, -1, null, scopeList, scopeList);\n        }\n        else {\n            isFirstLine = false;\n            prevState.reset();\n        }\n        lineText = lineText + '\\n';\n        var onigLineText = rule_1.createOnigString(lineText);\n        var lineLength = rule_1.getString(onigLineText).length;\n        var lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers);\n        var nextState = _tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens);\n        return {\n            lineLength: lineLength,\n            lineTokens: lineTokens,\n            ruleStack: nextState\n        };\n    };\n    return Grammar;\n}());\ngrammar.Grammar = Grammar;\nfunction initGrammar(grammar, base) {\n    grammar = utils_1.clone(grammar);\n    grammar.repository = grammar.repository || {};\n    grammar.repository.$self = {\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n        patterns: grammar.patterns,\n        name: grammar.scopeName\n    };\n    grammar.repository.$base = base || grammar.repository.$self;\n    return grammar;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n    if (captures.length === 0) {\n        return;\n    }\n    var len = Math.min(captures.length, captureIndices.length);\n    var localStack = [];\n    var maxEnd = captureIndices[0].end;\n    for (var i = 0; i < len; i++) {\n        var captureRule = captures[i];\n        if (captureRule === null) {\n            // Not interested\n            continue;\n        }\n        var captureIndex = captureIndices[i];\n        if (captureIndex.length === 0) {\n            // Nothing really captured\n            continue;\n        }\n        if (captureIndex.start > maxEnd) {\n            // Capture going beyond consumed string\n            break;\n        }\n        // pop captures while needed\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n            // pop!\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n            localStack.pop();\n        }\n        if (localStack.length > 0) {\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n        }\n        else {\n            lineTokens.produce(stack, captureIndex.start);\n        }\n        if (captureRule.retokenizeCapturedWithRuleId) {\n            // the capture requires additional matching\n            var scopeName = captureRule.getName(rule_1.getString(lineText), captureIndices);\n            var nameScopesList = stack.contentNameScopesList.push(grammar, scopeName);\n            var contentName = captureRule.getContentName(rule_1.getString(lineText), captureIndices);\n            var contentNameScopesList = nameScopesList.push(grammar, contentName);\n            var stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, null, nameScopesList, contentNameScopesList);\n            _tokenizeString(grammar, rule_1.createOnigString(rule_1.getString(lineText).substring(0, captureIndex.end)), (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens);\n            continue;\n        }\n        var captureRuleScopeName = captureRule.getName(rule_1.getString(lineText), captureIndices);\n        if (captureRuleScopeName !== null) {\n            // push\n            var base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n            var captureRuleScopesList = base.push(grammar, captureRuleScopeName);\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n        }\n    }\n    while (localStack.length > 0) {\n        // pop!\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n        localStack.pop();\n    }\n}\nfunction debugCompiledRuleToString(ruleScanner) {\n    var r = [];\n    for (var i = 0, len = ruleScanner.rules.length; i < len; i++) {\n        r.push('   - ' + ruleScanner.rules[i] + ': ' + ruleScanner.debugRegExps[i]);\n    }\n    return r.join('\\n');\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // The lower the better\n    var bestMatchRating = Number.MAX_VALUE;\n    var bestMatchCaptureIndices = null;\n    var bestMatchRuleId;\n    var bestMatchResultPriority = 0;\n    var scopes = stack.contentNameScopesList.generateScopes();\n    for (var i = 0, len = injections.length; i < len; i++) {\n        var injection = injections[i];\n        if (!injection.matcher(scopes)) {\n            // injection selector doesn't match stack\n            continue;\n        }\n        var ruleScanner = grammar.getRule(injection.ruleId).compile(grammar, null, isFirstLine, linePos === anchorPosition);\n        var matchResult = ruleScanner.scanner.findNextMatchSync(lineText, linePos);\n        if (debug_1$1.IN_DEBUG_MODE) {\n            console.log('  scanning for injections');\n            console.log(debugCompiledRuleToString(ruleScanner));\n        }\n        if (!matchResult) {\n            continue;\n        }\n        var matchRating = matchResult.captureIndices[0].start;\n        if (matchRating >= bestMatchRating) {\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\n            continue;\n        }\n        bestMatchRating = matchRating;\n        bestMatchCaptureIndices = matchResult.captureIndices;\n        bestMatchRuleId = ruleScanner.rules[matchResult.index];\n        bestMatchResultPriority = injection.priority;\n        if (bestMatchRating === linePos) {\n            // No more need to look at the rest of the injections.\n            break;\n        }\n    }\n    if (bestMatchCaptureIndices) {\n        return {\n            priorityMatch: bestMatchResultPriority === -1,\n            captureIndices: bestMatchCaptureIndices,\n            matchedRuleId: bestMatchRuleId\n        };\n    }\n    return null;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    var rule = stack.getRule(grammar);\n    var ruleScanner = rule.compile(grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n    var r = ruleScanner.scanner.findNextMatchSync(lineText, linePos);\n    if (debug_1$1.IN_DEBUG_MODE) {\n        console.log('  scanning for');\n        console.log(debugCompiledRuleToString(ruleScanner));\n    }\n    if (r) {\n        return {\n            captureIndices: r.captureIndices,\n            matchedRuleId: ruleScanner.rules[r.index]\n        };\n    }\n    return null;\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // Look for normal grammar rule\n    var matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    // Look for injected rules\n    var injections = grammar.getInjections();\n    if (injections.length === 0) {\n        // No injections whatsoever => early return\n        return matchResult;\n    }\n    var injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!injectionResult) {\n        // No injections matched => early return\n        return matchResult;\n    }\n    if (!matchResult) {\n        // Only injections matched => early return\n        return injectionResult;\n    }\n    // Decide if `matchResult` or `injectionResult` should win\n    var matchResultScore = matchResult.captureIndices[0].start;\n    var injectionResultScore = injectionResult.captureIndices[0].start;\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\n        // injection won!\n        return injectionResult;\n    }\n    return matchResult;\n}\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    var anchorPosition = -1;\n    var whileRules = [];\n    for (var node = stack; node; node = node.pop()) {\n        var nodeRule = node.getRule(grammar);\n        if (nodeRule instanceof rule_1.BeginWhileRule) {\n            whileRules.push({\n                rule: nodeRule,\n                stack: node\n            });\n        }\n    }\n    for (var whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n        var ruleScanner = whileRule.rule.compileWhile(grammar, whileRule.stack.endRule, isFirstLine, anchorPosition === linePos);\n        var r = ruleScanner.scanner.findNextMatchSync(lineText, linePos);\n        if (debug_1$1.IN_DEBUG_MODE) {\n            console.log('  scanning for while rule');\n            console.log(debugCompiledRuleToString(ruleScanner));\n        }\n        if (r) {\n            var matchedRuleId = ruleScanner.rules[r.index];\n            if (matchedRuleId !== -2) {\n                // we shouldn't end up here\n                stack = whileRule.stack.pop();\n                break;\n            }\n            if (r.captureIndices && r.captureIndices.length) {\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n                anchorPosition = r.captureIndices[0].end;\n                if (r.captureIndices[0].end > linePos) {\n                    linePos = r.captureIndices[0].end;\n                    isFirstLine = false;\n                }\n            }\n        }\n        else {\n            stack = whileRule.stack.pop();\n            break;\n        }\n    }\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\n}\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    var lineLength = rule_1.getString(lineText).length;\n    var STOP = false;\n    var whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n    stack = whileCheckResult.stack;\n    linePos = whileCheckResult.linePos;\n    isFirstLine = whileCheckResult.isFirstLine;\n    var anchorPosition = whileCheckResult.anchorPosition;\n    while (!STOP) {\n        scanNext(); // potentially modifies linePos && anchorPosition\n    }\n    function scanNext() {\n        if (debug_1$1.IN_DEBUG_MODE) {\n            console.log('');\n            console.log('@@scanNext: |' + rule_1.getString(lineText).replace(/\\n$/, '\\\\n').substr(linePos) + '|');\n        }\n        var r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n        if (!r) {\n            if (debug_1$1.IN_DEBUG_MODE) {\n                console.log('  no more matches.');\n            }\n            // No match\n            lineTokens.produce(stack, lineLength);\n            STOP = true;\n            return;\n        }\n        var captureIndices = r.captureIndices;\n        var matchedRuleId = r.matchedRuleId;\n        var hasAdvanced = (captureIndices && captureIndices.length > 0) ? (captureIndices[0].end > linePos) : false;\n        if (matchedRuleId === -1) {\n            // We matched the `end` for this rule => pop it\n            var poppedRule = stack.getRule(grammar);\n            if (debug_1$1.IN_DEBUG_MODE) {\n                console.log('  popping ' + poppedRule.debugName + ' - ' + poppedRule.debugEndRegExp);\n            }\n            lineTokens.produce(stack, captureIndices[0].start);\n            stack = stack.setContentNameScopesList(stack.nameScopesList);\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n            lineTokens.produce(stack, captureIndices[0].end);\n            // pop\n            var popped = stack;\n            stack = stack.pop();\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\n                // Grammar pushed & popped a rule without advancing\n                console.error('[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing');\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n                stack = popped;\n                lineTokens.produce(stack, lineLength);\n                STOP = true;\n                return;\n            }\n        }\n        else {\n            // We matched a rule!\n            var _rule = grammar.getRule(matchedRuleId);\n            lineTokens.produce(stack, captureIndices[0].start);\n            var beforePush = stack;\n            // push it on the stack rule\n            var scopeName = _rule.getName(rule_1.getString(lineText), captureIndices);\n            var nameScopesList = stack.contentNameScopesList.push(grammar, scopeName);\n            stack = stack.push(matchedRuleId, linePos, null, nameScopesList, nameScopesList);\n            if (_rule instanceof rule_1.BeginEndRule) {\n                var pushedRule = _rule;\n                if (debug_1$1.IN_DEBUG_MODE) {\n                    console.log('  pushing ' + pushedRule.debugName + ' - ' + pushedRule.debugBeginRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                var contentName = pushedRule.getContentName(rule_1.getString(lineText), captureIndices);\n                var contentNameScopesList = nameScopesList.push(grammar, contentName);\n                stack = stack.setContentNameScopesList(contentNameScopesList);\n                if (pushedRule.endHasBackReferences) {\n                    stack = stack.setEndRule(pushedRule.getEndWithResolvedBackReferences(rule_1.getString(lineText), captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    console.error('[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing');\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else if (_rule instanceof rule_1.BeginWhileRule) {\n                var pushedRule = _rule;\n                if (debug_1$1.IN_DEBUG_MODE) {\n                    console.log('  pushing ' + pushedRule.debugName);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                var contentName = pushedRule.getContentName(rule_1.getString(lineText), captureIndices);\n                var contentNameScopesList = nameScopesList.push(grammar, contentName);\n                stack = stack.setContentNameScopesList(contentNameScopesList);\n                if (pushedRule.whileHasBackReferences) {\n                    stack = stack.setEndRule(pushedRule.getWhileWithResolvedBackReferences(rule_1.getString(lineText), captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    console.error('[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing');\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else {\n                var matchingRule = _rule;\n                if (debug_1$1.IN_DEBUG_MODE) {\n                    console.log('  matched ' + matchingRule.debugName + ' - ' + matchingRule.debugMatchRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                // pop rule immediately since it is a MatchRule\n                stack = stack.pop();\n                if (!hasAdvanced) {\n                    // Grammar is not advancing, nor is it pushing/popping\n                    console.error('[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping');\n                    stack = stack.safePop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n        }\n        if (captureIndices[0].end > linePos) {\n            // Advance stream\n            linePos = captureIndices[0].end;\n            isFirstLine = false;\n        }\n    }\n    return stack;\n}\nvar StackElementMetadata = /** @class */ (function () {\n    function StackElementMetadata() {\n    }\n    StackElementMetadata.toBinaryStr = function (metadata) {\n        var r = metadata.toString(2);\n        while (r.length < 32) {\n            r = '0' + r;\n        }\n        return r;\n    };\n    StackElementMetadata.printMetadata = function (metadata) {\n        var languageId = StackElementMetadata.getLanguageId(metadata);\n        var tokenType = StackElementMetadata.getTokenType(metadata);\n        var fontStyle = StackElementMetadata.getFontStyle(metadata);\n        var foreground = StackElementMetadata.getForeground(metadata);\n        var background = StackElementMetadata.getBackground(metadata);\n        console.log({\n            languageId: languageId,\n            tokenType: tokenType,\n            fontStyle: fontStyle,\n            foreground: foreground,\n            background: background,\n        });\n    };\n    StackElementMetadata.getLanguageId = function (metadata) {\n        return (metadata & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\n    };\n    StackElementMetadata.getTokenType = function (metadata) {\n        return (metadata & 1792 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\n    };\n    StackElementMetadata.getFontStyle = function (metadata) {\n        return (metadata & 14336 /* FONT_STYLE_MASK */) >>> 11 /* FONT_STYLE_OFFSET */;\n    };\n    StackElementMetadata.getForeground = function (metadata) {\n        return (metadata & 8372224 /* FOREGROUND_MASK */) >>> 14 /* FOREGROUND_OFFSET */;\n    };\n    StackElementMetadata.getBackground = function (metadata) {\n        return (metadata & 4286578688 /* BACKGROUND_MASK */) >>> 23 /* BACKGROUND_OFFSET */;\n    };\n    StackElementMetadata.set = function (metadata, languageId, tokenType, fontStyle, foreground, background) {\n        var _languageId = StackElementMetadata.getLanguageId(metadata);\n        var _tokenType = StackElementMetadata.getTokenType(metadata);\n        var _fontStyle = StackElementMetadata.getFontStyle(metadata);\n        var _foreground = StackElementMetadata.getForeground(metadata);\n        var _background = StackElementMetadata.getBackground(metadata);\n        if (languageId !== 0) {\n            _languageId = languageId;\n        }\n        if (tokenType !== 0 /* Other */) {\n            _tokenType = tokenType === 8 /* MetaEmbedded */ ? 0 /* Other */ : tokenType;\n        }\n        if (fontStyle !== -1 /* NotSet */) {\n            _fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            _foreground = foreground;\n        }\n        if (background !== 0) {\n            _background = background;\n        }\n        return ((_languageId << 0 /* LANGUAGEID_OFFSET */)\n            | (_tokenType << 8 /* TOKEN_TYPE_OFFSET */)\n            | (_fontStyle << 11 /* FONT_STYLE_OFFSET */)\n            | (_foreground << 14 /* FOREGROUND_OFFSET */)\n            | (_background << 23 /* BACKGROUND_OFFSET */)) >>> 0;\n    };\n    return StackElementMetadata;\n}());\ngrammar.StackElementMetadata = StackElementMetadata;\nvar ScopeListElement = /** @class */ (function () {\n    function ScopeListElement(parent, scope, metadata) {\n        this.parent = parent;\n        this.scope = scope;\n        this.metadata = metadata;\n    }\n    ScopeListElement._equals = function (a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (a.scope !== b.scope || a.metadata !== b.metadata) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n        } while (true);\n    };\n    ScopeListElement.prototype.equals = function (other) {\n        return ScopeListElement._equals(this, other);\n    };\n    ScopeListElement._matchesScope = function (scope, selector, selectorWithDot) {\n        return (selector === scope || scope.substring(0, selectorWithDot.length) === selectorWithDot);\n    };\n    ScopeListElement._matches = function (target, parentScopes) {\n        if (parentScopes === null) {\n            return true;\n        }\n        var len = parentScopes.length;\n        var index = 0;\n        var selector = parentScopes[index];\n        var selectorWithDot = selector + '.';\n        while (target) {\n            if (this._matchesScope(target.scope, selector, selectorWithDot)) {\n                index++;\n                if (index === len) {\n                    return true;\n                }\n                selector = parentScopes[index];\n                selectorWithDot = selector + '.';\n            }\n            target = target.parent;\n        }\n        return false;\n    };\n    ScopeListElement.mergeMetadata = function (metadata, scopesList, source) {\n        if (source === null) {\n            return metadata;\n        }\n        var fontStyle = -1 /* NotSet */;\n        var foreground = 0;\n        var background = 0;\n        if (source.themeData !== null) {\n            // Find the first themeData that matches\n            for (var i = 0, len = source.themeData.length; i < len; i++) {\n                var themeData = source.themeData[i];\n                if (this._matches(scopesList, themeData.parentScopes)) {\n                    fontStyle = themeData.fontStyle;\n                    foreground = themeData.foreground;\n                    background = themeData.background;\n                    break;\n                }\n            }\n        }\n        return StackElementMetadata.set(metadata, source.languageId, source.tokenType, fontStyle, foreground, background);\n    };\n    ScopeListElement._push = function (target, grammar, scopes) {\n        for (var i = 0, len = scopes.length; i < len; i++) {\n            var scope = scopes[i];\n            var rawMetadata = grammar.getMetadataForScope(scope);\n            var metadata = ScopeListElement.mergeMetadata(target.metadata, target, rawMetadata);\n            target = new ScopeListElement(target, scope, metadata);\n        }\n        return target;\n    };\n    ScopeListElement.prototype.push = function (grammar, scope) {\n        if (scope === null) {\n            return this;\n        }\n        if (scope.indexOf(' ') >= 0) {\n            // there are multiple scopes to push\n            return ScopeListElement._push(this, grammar, scope.split(/ /g));\n        }\n        // there is a single scope to push\n        return ScopeListElement._push(this, grammar, [scope]);\n    };\n    ScopeListElement._generateScopes = function (scopesList) {\n        var result = [], resultLen = 0;\n        while (scopesList) {\n            result[resultLen++] = scopesList.scope;\n            scopesList = scopesList.parent;\n        }\n        result.reverse();\n        return result;\n    };\n    ScopeListElement.prototype.generateScopes = function () {\n        return ScopeListElement._generateScopes(this);\n    };\n    return ScopeListElement;\n}());\ngrammar.ScopeListElement = ScopeListElement;\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nvar StackElement = /** @class */ (function () {\n    function StackElement(parent, ruleId, enterPos, endRule, nameScopesList, contentNameScopesList) {\n        this.parent = parent;\n        this.depth = (this.parent ? this.parent.depth + 1 : 1);\n        this.ruleId = ruleId;\n        this._enterPos = enterPos;\n        this.endRule = endRule;\n        this.nameScopesList = nameScopesList;\n        this.contentNameScopesList = contentNameScopesList;\n    }\n    /**\n     * A structural equals check. Does not take into account `scopes`.\n     */\n    StackElement._structuralEquals = function (a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (a.depth !== b.depth || a.ruleId !== b.ruleId || a.endRule !== b.endRule) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n        } while (true);\n    };\n    StackElement._equals = function (a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!this._structuralEquals(a, b)) {\n            return false;\n        }\n        return a.contentNameScopesList.equals(b.contentNameScopesList);\n    };\n    StackElement.prototype.clone = function () {\n        return this;\n    };\n    StackElement.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        return StackElement._equals(this, other);\n    };\n    StackElement._reset = function (el) {\n        while (el) {\n            el._enterPos = -1;\n            el = el.parent;\n        }\n    };\n    StackElement.prototype.reset = function () {\n        StackElement._reset(this);\n    };\n    StackElement.prototype.pop = function () {\n        return this.parent;\n    };\n    StackElement.prototype.safePop = function () {\n        if (this.parent) {\n            return this.parent;\n        }\n        return this;\n    };\n    StackElement.prototype.push = function (ruleId, enterPos, endRule, nameScopesList, contentNameScopesList) {\n        return new StackElement(this, ruleId, enterPos, endRule, nameScopesList, contentNameScopesList);\n    };\n    StackElement.prototype.getEnterPos = function () {\n        return this._enterPos;\n    };\n    StackElement.prototype.getRule = function (grammar) {\n        return grammar.getRule(this.ruleId);\n    };\n    StackElement.prototype._writeString = function (res, outIndex) {\n        if (this.parent) {\n            outIndex = this.parent._writeString(res, outIndex);\n        }\n        res[outIndex++] = \"(\" + this.ruleId + \", TODO-\" + this.nameScopesList + \", TODO-\" + this.contentNameScopesList + \")\";\n        return outIndex;\n    };\n    StackElement.prototype.toString = function () {\n        var r = [];\n        this._writeString(r, 0);\n        return '[' + r.join(',') + ']';\n    };\n    StackElement.prototype.setContentNameScopesList = function (contentNameScopesList) {\n        if (this.contentNameScopesList === contentNameScopesList) {\n            return this;\n        }\n        return this.parent.push(this.ruleId, this._enterPos, this.endRule, this.nameScopesList, contentNameScopesList);\n    };\n    StackElement.prototype.setEndRule = function (endRule) {\n        if (this.endRule === endRule) {\n            return this;\n        }\n        return new StackElement(this.parent, this.ruleId, this._enterPos, endRule, this.nameScopesList, this.contentNameScopesList);\n    };\n    StackElement.prototype.hasSameRuleAs = function (other) {\n        return this.ruleId === other.ruleId;\n    };\n    StackElement.NULL = new StackElement(null, 0, 0, null, null, null);\n    return StackElement;\n}());\ngrammar.StackElement = StackElement;\nvar LocalStackElement = /** @class */ (function () {\n    function LocalStackElement(scopes, endPos) {\n        this.scopes = scopes;\n        this.endPos = endPos;\n    }\n    return LocalStackElement;\n}());\ngrammar.LocalStackElement = LocalStackElement;\nvar LineTokens = /** @class */ (function () {\n    function LineTokens(emitBinaryTokens, lineText, tokenTypeOverrides) {\n        this._emitBinaryTokens = emitBinaryTokens;\n        this._tokenTypeOverrides = tokenTypeOverrides;\n        if (debug_1$1.IN_DEBUG_MODE) {\n            this._lineText = lineText;\n        }\n        if (this._emitBinaryTokens) {\n            this._binaryTokens = [];\n        }\n        else {\n            this._tokens = [];\n        }\n        this._lastTokenEndIndex = 0;\n    }\n    LineTokens.prototype.produce = function (stack, endIndex) {\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\n    };\n    LineTokens.prototype.produceFromScopes = function (scopesList, endIndex) {\n        if (this._lastTokenEndIndex >= endIndex) {\n            return;\n        }\n        if (this._emitBinaryTokens) {\n            var metadata = scopesList.metadata;\n            for (var _i = 0, _a = this._tokenTypeOverrides; _i < _a.length; _i++) {\n                var tokenType = _a[_i];\n                if (tokenType.matcher(scopesList.generateScopes())) {\n                    metadata = StackElementMetadata.set(metadata, 0, toTemporaryType(tokenType.type), -1 /* NotSet */, 0, 0);\n                }\n            }\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n                // no need to push a token with the same metadata\n                this._lastTokenEndIndex = endIndex;\n                return;\n            }\n            this._binaryTokens.push(this._lastTokenEndIndex);\n            this._binaryTokens.push(metadata);\n            this._lastTokenEndIndex = endIndex;\n            return;\n        }\n        var scopes = scopesList.generateScopes();\n        if (debug_1$1.IN_DEBUG_MODE) {\n            console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\n            for (var k = 0; k < scopes.length; k++) {\n                console.log('      * ' + scopes[k]);\n            }\n        }\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: endIndex,\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\n            scopes: scopes\n        });\n        this._lastTokenEndIndex = endIndex;\n    };\n    LineTokens.prototype.getResult = function (stack, lineLength) {\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n            // pop produced token for newline\n            this._tokens.pop();\n        }\n        if (this._tokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._tokens[this._tokens.length - 1].startIndex = 0;\n        }\n        return this._tokens;\n    };\n    LineTokens.prototype.getBinaryResult = function (stack, lineLength) {\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n            // pop produced token for newline\n            this._binaryTokens.pop();\n            this._binaryTokens.pop();\n        }\n        if (this._binaryTokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\n        }\n        var result = new Uint32Array(this._binaryTokens.length);\n        for (var i = 0, len = this._binaryTokens.length; i < len; i++) {\n            result[i] = this._binaryTokens[i];\n        }\n        return result;\n    };\n    return LineTokens;\n}());\nfunction toTemporaryType(standardType) {\n    switch (standardType) {\n        case 4 /* RegEx */:\n            return 4 /* RegEx */;\n        case 2 /* String */:\n            return 2 /* String */;\n        case 1 /* Comment */:\n            return 1 /* Comment */;\n        case 0 /* Other */:\n        default:\n            // `MetaEmbedded` is the same scope as `Other`\n            // but it overwrites existing token types in the stack.\n            return 8 /* MetaEmbedded */;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(registry, \"__esModule\", { value: true });\nvar grammar_1$1 = grammar;\nvar SyncRegistry = /** @class */ (function () {\n    function SyncRegistry(theme) {\n        this._theme = theme;\n        this._grammars = {};\n        this._rawGrammars = {};\n        this._injectionGrammars = {};\n    }\n    SyncRegistry.prototype.setTheme = function (theme) {\n        var _this = this;\n        this._theme = theme;\n        Object.keys(this._grammars).forEach(function (scopeName) {\n            var grammar = _this._grammars[scopeName];\n            grammar.onDidChangeTheme();\n        });\n    };\n    SyncRegistry.prototype.getColorMap = function () {\n        return this._theme.getColorMap();\n    };\n    /**\n     * Add `grammar` to registry and return a list of referenced scope names\n     */\n    SyncRegistry.prototype.addGrammar = function (grammar, injectionScopeNames) {\n        this._rawGrammars[grammar.scopeName] = grammar;\n        var includedScopes = {};\n        grammar_1$1.collectIncludedScopes(includedScopes, grammar);\n        if (injectionScopeNames) {\n            this._injectionGrammars[grammar.scopeName] = injectionScopeNames;\n            injectionScopeNames.forEach(function (scopeName) {\n                includedScopes[scopeName] = true;\n            });\n        }\n        return Object.keys(includedScopes);\n    };\n    /**\n     * Lookup a raw grammar.\n     */\n    SyncRegistry.prototype.lookup = function (scopeName) {\n        return this._rawGrammars[scopeName];\n    };\n    /**\n     * Returns the injections for the given grammar\n     */\n    SyncRegistry.prototype.injections = function (targetScope) {\n        return this._injectionGrammars[targetScope];\n    };\n    /**\n     * Get the default theme settings\n     */\n    SyncRegistry.prototype.getDefaults = function () {\n        return this._theme.getDefaults();\n    };\n    /**\n     * Match a scope in the theme.\n     */\n    SyncRegistry.prototype.themeMatch = function (scopeName) {\n        return this._theme.match(scopeName);\n    };\n    /**\n     * Lookup a grammar.\n     */\n    SyncRegistry.prototype.grammarForScopeName = function (scopeName, initialLanguage, embeddedLanguages, tokenTypes) {\n        if (!this._grammars[scopeName]) {\n            var rawGrammar = this._rawGrammars[scopeName];\n            if (!rawGrammar) {\n                return null;\n            }\n            this._grammars[scopeName] = grammar_1$1.createGrammar(rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, this);\n        }\n        return this._grammars[scopeName];\n    };\n    return SyncRegistry;\n}());\nregistry.SyncRegistry = SyncRegistry;\n\nvar grammarReader = {};\n\nvar main = {};\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nmain.__esModule = true;\nmain.parse = main.parseWithLocation = void 0;\nfunction parseWithLocation(content, filename, locationKeyName) {\n    return _parse(content, filename, locationKeyName);\n}\nmain.parseWithLocation = parseWithLocation;\n/**\n * A very fast plist parser\n */\nfunction parse$1(content) {\n    return _parse(content, null, null);\n}\nmain.parse = parse$1;\nfunction _parse(content, filename, locationKeyName) {\n    var len = content.length;\n    var pos = 0;\n    var line = 1;\n    var char = 0;\n    // Skip UTF8 BOM\n    if (len > 0 && content.charCodeAt(0) === 65279 /* ChCode.BOM */) {\n        pos = 1;\n    }\n    function advancePosBy(by) {\n        if (locationKeyName === null) {\n            pos = pos + by;\n        }\n        else {\n            while (by > 0) {\n                var chCode = content.charCodeAt(pos);\n                if (chCode === 10 /* ChCode.LINE_FEED */) {\n                    pos++;\n                    line++;\n                    char = 0;\n                }\n                else {\n                    pos++;\n                    char++;\n                }\n                by--;\n            }\n        }\n    }\n    function advancePosTo(to) {\n        if (locationKeyName === null) {\n            pos = to;\n        }\n        else {\n            advancePosBy(to - pos);\n        }\n    }\n    function skipWhitespace() {\n        while (pos < len) {\n            var chCode = content.charCodeAt(pos);\n            if (chCode !== 32 /* ChCode.SPACE */ && chCode !== 9 /* ChCode.TAB */ && chCode !== 13 /* ChCode.CARRIAGE_RETURN */ && chCode !== 10 /* ChCode.LINE_FEED */) {\n                break;\n            }\n            advancePosBy(1);\n        }\n    }\n    function advanceIfStartsWith(str) {\n        if (content.substr(pos, str.length) === str) {\n            advancePosBy(str.length);\n            return true;\n        }\n        return false;\n    }\n    function advanceUntil(str) {\n        var nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            advancePosTo(nextOccurence + str.length);\n        }\n        else {\n            // EOF\n            advancePosTo(len);\n        }\n    }\n    function captureUntil(str) {\n        var nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            var r = content.substring(pos, nextOccurence);\n            advancePosTo(nextOccurence + str.length);\n            return r;\n        }\n        else {\n            // EOF\n            var r = content.substr(pos);\n            advancePosTo(len);\n            return r;\n        }\n    }\n    var state = 0 /* State.ROOT_STATE */;\n    var cur = null;\n    var stateStack = [];\n    var objStack = [];\n    var curKey = null;\n    function pushState(newState, newCur) {\n        stateStack.push(state);\n        objStack.push(cur);\n        state = newState;\n        cur = newCur;\n    }\n    function popState() {\n        if (stateStack.length === 0) {\n            return fail('illegal state stack');\n        }\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        throw new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\n    }\n    var dictState = {\n        enterDict: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            var newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur[curKey] = newDict;\n            curKey = null;\n            pushState(1 /* State.DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            var newArr = [];\n            cur[curKey] = newArr;\n            curKey = null;\n            pushState(2 /* State.ARR_STATE */, newArr);\n        }\n    };\n    var arrState = {\n        enterDict: function () {\n            var newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur.push(newDict);\n            pushState(1 /* State.DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            var newArr = [];\n            cur.push(newArr);\n            pushState(2 /* State.ARR_STATE */, newArr);\n        }\n    };\n    function enterDict() {\n        if (state === 1 /* State.DICT_STATE */) {\n            dictState.enterDict();\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            arrState.enterDict();\n        }\n        else { // ROOT_STATE\n            cur = {};\n            if (locationKeyName !== null) {\n                cur[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            pushState(1 /* State.DICT_STATE */, cur);\n        }\n    }\n    function leaveDict() {\n        if (state === 1 /* State.DICT_STATE */) {\n            popState();\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            return fail('unexpected </dict>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </dict>');\n        }\n    }\n    function enterArray() {\n        if (state === 1 /* State.DICT_STATE */) {\n            dictState.enterArray();\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            arrState.enterArray();\n        }\n        else { // ROOT_STATE\n            cur = [];\n            pushState(2 /* State.ARR_STATE */, cur);\n        }\n    }\n    function leaveArray() {\n        if (state === 1 /* State.DICT_STATE */) {\n            return fail('unexpected </array>');\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            popState();\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </array>');\n        }\n    }\n    function acceptKey(val) {\n        if (state === 1 /* State.DICT_STATE */) {\n            if (curKey !== null) {\n                return fail('too many <key>');\n            }\n            curKey = val;\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            return fail('unexpected <key>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected <key>');\n        }\n    }\n    function acceptString(val) {\n        if (state === 1 /* State.DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptReal(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse float');\n        }\n        if (state === 1 /* State.DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptInteger(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse integer');\n        }\n        if (state === 1 /* State.DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptDate(val) {\n        if (state === 1 /* State.DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptData(val) {\n        if (state === 1 /* State.DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptBool(val) {\n        if (state === 1 /* State.DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* State.ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function escapeVal(str) {\n        return str.replace(/&#([0-9]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 10));\n        }).replace(/&#x([0-9a-f]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_) {\n            switch (_) {\n                case '&amp;': return '&';\n                case '&lt;': return '<';\n                case '&gt;': return '>';\n                case '&quot;': return '\"';\n                case '&apos;': return '\\'';\n            }\n            return _;\n        });\n    }\n    function parseOpenTag() {\n        var r = captureUntil('>');\n        var isClosed = false;\n        if (r.charCodeAt(r.length - 1) === 47 /* ChCode.SLASH */) {\n            isClosed = true;\n            r = r.substring(0, r.length - 1);\n        }\n        return {\n            name: r.trim(),\n            isClosed: isClosed\n        };\n    }\n    function parseTagValue(tag) {\n        if (tag.isClosed) {\n            return '';\n        }\n        var val = captureUntil('</');\n        advanceUntil('>');\n        return escapeVal(val);\n    }\n    while (pos < len) {\n        skipWhitespace();\n        if (pos >= len) {\n            break;\n        }\n        var chCode = content.charCodeAt(pos);\n        advancePosBy(1);\n        if (chCode !== 60 /* ChCode.LESS_THAN */) {\n            return fail('expected <');\n        }\n        if (pos >= len) {\n            return fail('unexpected end of input');\n        }\n        var peekChCode = content.charCodeAt(pos);\n        if (peekChCode === 63 /* ChCode.QUESTION_MARK */) {\n            advancePosBy(1);\n            advanceUntil('?>');\n            continue;\n        }\n        if (peekChCode === 33 /* ChCode.EXCLAMATION_MARK */) {\n            advancePosBy(1);\n            if (advanceIfStartsWith('--')) {\n                advanceUntil('-->');\n                continue;\n            }\n            advanceUntil('>');\n            continue;\n        }\n        if (peekChCode === 47 /* ChCode.SLASH */) {\n            advancePosBy(1);\n            skipWhitespace();\n            if (advanceIfStartsWith('plist')) {\n                advanceUntil('>');\n                continue;\n            }\n            if (advanceIfStartsWith('dict')) {\n                advanceUntil('>');\n                leaveDict();\n                continue;\n            }\n            if (advanceIfStartsWith('array')) {\n                advanceUntil('>');\n                leaveArray();\n                continue;\n            }\n            return fail('unexpected closed tag');\n        }\n        var tag = parseOpenTag();\n        switch (tag.name) {\n            case 'dict':\n                enterDict();\n                if (tag.isClosed) {\n                    leaveDict();\n                }\n                continue;\n            case 'array':\n                enterArray();\n                if (tag.isClosed) {\n                    leaveArray();\n                }\n                continue;\n            case 'key':\n                acceptKey(parseTagValue(tag));\n                continue;\n            case 'string':\n                acceptString(parseTagValue(tag));\n                continue;\n            case 'real':\n                acceptReal(parseFloat(parseTagValue(tag)));\n                continue;\n            case 'integer':\n                acceptInteger(parseInt(parseTagValue(tag), 10));\n                continue;\n            case 'date':\n                acceptDate(new Date(parseTagValue(tag)));\n                continue;\n            case 'data':\n                acceptData(parseTagValue(tag));\n                continue;\n            case 'true':\n                parseTagValue(tag);\n                acceptBool(true);\n                continue;\n            case 'false':\n                parseTagValue(tag);\n                acceptBool(false);\n                continue;\n        }\n        if (/^plist/.test(tag.name)) {\n            continue;\n        }\n        return fail('unexpected opened tag ' + tag.name);\n    }\n    return cur;\n}\n\nvar json = {};\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(json, \"__esModule\", { value: true });\nfunction doFail(streamState, msg) {\n    // console.log('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n    throw new Error('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n}\nfunction parse(source, filename, withMetadata) {\n    var streamState = new JSONStreamState(source);\n    var token = new JSONToken();\n    var state = 0 /* ROOT_STATE */;\n    var cur = null;\n    var stateStack = [];\n    var objStack = [];\n    function pushState() {\n        stateStack.push(state);\n        objStack.push(cur);\n    }\n    function popState() {\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        doFail(streamState, msg);\n    }\n    while (nextJSONToken(streamState, token)) {\n        if (state === 0 /* ROOT_STATE */) {\n            if (cur !== null) {\n                fail('too many constructs in root');\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                cur = {};\n                if (withMetadata) {\n                    cur.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                pushState();\n                state = 1 /* DICT_STATE */;\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                cur = [];\n                pushState();\n                state = 4 /* ARR_STATE */;\n                continue;\n            }\n            fail('unexpected token in root');\n        }\n        if (state === 2 /* DICT_STATE_COMMA */) {\n            if (token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 3 /* DICT_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or }');\n        }\n        if (state === 1 /* DICT_STATE */ || state === 3 /* DICT_STATE_NO_CLOSE */) {\n            if (state === 1 /* DICT_STATE */ && token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 1 /* STRING */) {\n                var keyValue = token.value;\n                if (!nextJSONToken(streamState, token) || token.type !== 6 /* COLON */) {\n                    fail('expected colon');\n                }\n                if (!nextJSONToken(streamState, token)) {\n                    fail('expected value');\n                }\n                state = 2 /* DICT_STATE_COMMA */;\n                if (token.type === 1 /* STRING */) {\n                    cur[keyValue] = token.value;\n                    continue;\n                }\n                if (token.type === 8 /* NULL */) {\n                    cur[keyValue] = null;\n                    continue;\n                }\n                if (token.type === 9 /* TRUE */) {\n                    cur[keyValue] = true;\n                    continue;\n                }\n                if (token.type === 10 /* FALSE */) {\n                    cur[keyValue] = false;\n                    continue;\n                }\n                if (token.type === 11 /* NUMBER */) {\n                    cur[keyValue] = parseFloat(token.value);\n                    continue;\n                }\n                if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                    var newArr = [];\n                    cur[keyValue] = newArr;\n                    pushState();\n                    state = 4 /* ARR_STATE */;\n                    cur = newArr;\n                    continue;\n                }\n                if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                    var newDict = {};\n                    if (withMetadata) {\n                        newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                    }\n                    cur[keyValue] = newDict;\n                    pushState();\n                    state = 1 /* DICT_STATE */;\n                    cur = newDict;\n                    continue;\n                }\n            }\n            fail('unexpected token in dict');\n        }\n        if (state === 5 /* ARR_STATE_COMMA */) {\n            if (token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 6 /* ARR_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or ]');\n        }\n        if (state === 4 /* ARR_STATE */ || state === 6 /* ARR_STATE_NO_CLOSE */) {\n            if (state === 4 /* ARR_STATE */ && token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            state = 5 /* ARR_STATE_COMMA */;\n            if (token.type === 1 /* STRING */) {\n                cur.push(token.value);\n                continue;\n            }\n            if (token.type === 8 /* NULL */) {\n                cur.push(null);\n                continue;\n            }\n            if (token.type === 9 /* TRUE */) {\n                cur.push(true);\n                continue;\n            }\n            if (token.type === 10 /* FALSE */) {\n                cur.push(false);\n                continue;\n            }\n            if (token.type === 11 /* NUMBER */) {\n                cur.push(parseFloat(token.value));\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                var newArr = [];\n                cur.push(newArr);\n                pushState();\n                state = 4 /* ARR_STATE */;\n                cur = newArr;\n                continue;\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                var newDict = {};\n                if (withMetadata) {\n                    newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                cur.push(newDict);\n                pushState();\n                state = 1 /* DICT_STATE */;\n                cur = newDict;\n                continue;\n            }\n            fail('unexpected token in array');\n        }\n        fail('unknown state');\n    }\n    if (objStack.length !== 0) {\n        fail('unclosed constructs');\n    }\n    return cur;\n}\njson.parse = parse;\nvar JSONStreamState = /** @class */ (function () {\n    function JSONStreamState(source) {\n        this.source = source;\n        this.pos = 0;\n        this.len = source.length;\n        this.line = 1;\n        this.char = 0;\n    }\n    return JSONStreamState;\n}());\nvar JSONToken = /** @class */ (function () {\n    function JSONToken() {\n        this.value = null;\n        this.offset = -1;\n        this.len = -1;\n        this.line = -1;\n        this.char = -1;\n    }\n    JSONToken.prototype.toLocation = function (filename) {\n        return {\n            filename: filename,\n            line: this.line,\n            char: this.char\n        };\n    };\n    return JSONToken;\n}());\n/**\n * precondition: the string is known to be valid JSON (https://www.ietf.org/rfc/rfc4627.txt)\n */\nfunction nextJSONToken(_state, _out) {\n    _out.value = null;\n    _out.type = 0 /* UNKNOWN */;\n    _out.offset = -1;\n    _out.len = -1;\n    _out.line = -1;\n    _out.char = -1;\n    var source = _state.source;\n    var pos = _state.pos;\n    var len = _state.len;\n    var line = _state.line;\n    var char = _state.char;\n    //------------------------ skip whitespace\n    var chCode;\n    do {\n        if (pos >= len) {\n            return false; /*EOS*/\n        }\n        chCode = source.charCodeAt(pos);\n        if (chCode === 32 /* SPACE */ || chCode === 9 /* HORIZONTAL_TAB */ || chCode === 13 /* CARRIAGE_RETURN */) {\n            // regular whitespace\n            pos++;\n            char++;\n            continue;\n        }\n        if (chCode === 10 /* LINE_FEED */) {\n            // newline\n            pos++;\n            line++;\n            char = 0;\n            continue;\n        }\n        // not whitespace\n        break;\n    } while (true);\n    _out.offset = pos;\n    _out.line = line;\n    _out.char = char;\n    if (chCode === 34 /* QUOTATION_MARK */) {\n        //------------------------ strings\n        _out.type = 1 /* STRING */;\n        pos++;\n        char++;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            pos++;\n            char++;\n            if (chCode === 92 /* BACKSLASH */) {\n                // skip next char\n                pos++;\n                char++;\n                continue;\n            }\n            if (chCode === 34 /* QUOTATION_MARK */) {\n                // end of the string\n                break;\n            }\n        } while (true);\n        _out.value = source.substring(_out.offset + 1, pos - 1).replace(/\\\\u([0-9A-Fa-f]{4})/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/\\\\(.)/g, function (_, m0) {\n            switch (m0) {\n                case '\"': return '\"';\n                case '\\\\': return '\\\\';\n                case '/': return '/';\n                case 'b': return '\\b';\n                case 'f': return '\\f';\n                case 'n': return '\\n';\n                case 'r': return '\\r';\n                case 't': return '\\t';\n                default: doFail(_state, 'invalid escape sequence');\n            }\n        });\n    }\n    else if (chCode === 91 /* LEFT_SQUARE_BRACKET */) {\n        _out.type = 2 /* LEFT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 123 /* LEFT_CURLY_BRACKET */) {\n        _out.type = 3 /* LEFT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 93 /* RIGHT_SQUARE_BRACKET */) {\n        _out.type = 4 /* RIGHT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 125 /* RIGHT_CURLY_BRACKET */) {\n        _out.type = 5 /* RIGHT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 58 /* COLON */) {\n        _out.type = 6 /* COLON */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 44 /* COMMA */) {\n        _out.type = 7 /* COMMA */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 110 /* n */) {\n        //------------------------ null\n        _out.type = 8 /* NULL */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 116 /* t */) {\n        //------------------------ true\n        _out.type = 9 /* TRUE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 114 /* r */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 102 /* f */) {\n        //------------------------ false\n        _out.type = 10 /* FALSE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 97 /* a */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 115 /* s */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else {\n        //------------------------ numbers\n        _out.type = 11 /* NUMBER */;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            if (chCode === 46 /* DOT */\n                || (chCode >= 48 /* D0 */ && chCode <= 57 /* D9 */)\n                || (chCode === 101 /* e */ || chCode === 69 /* E */)\n                || (chCode === 45 /* MINUS */ || chCode === 43 /* PLUS */)) {\n                // looks like a piece of a number\n                pos++;\n                char++;\n                continue;\n            }\n            // pos--; char--;\n            break;\n        } while (true);\n    }\n    _out.len = pos - _out.offset;\n    if (_out.value === null) {\n        _out.value = source.substr(_out.offset, _out.len);\n    }\n    _state.pos = pos;\n    _state.line = line;\n    _state.char = char;\n    // console.log('PRODUCING TOKEN: ', _out.value, JSONTokenType[_out.type]);\n    return true;\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(grammarReader, \"__esModule\", { value: true });\nvar plist = main;\nvar debug_1 = debug;\nvar json_1 = json;\nfunction parseJSONGrammar(contents, filename) {\n    if (debug_1.CAPTURE_METADATA) {\n        return json_1.parse(contents, filename, true);\n    }\n    return JSON.parse(contents);\n}\ngrammarReader.parseJSONGrammar = parseJSONGrammar;\nfunction parsePLISTGrammar(contents, filename) {\n    if (debug_1.CAPTURE_METADATA) {\n        return plist.parseWithLocation(contents, filename, '$vscodeTextmateLocation');\n    }\n    return plist.parse(contents);\n}\ngrammarReader.parsePLISTGrammar = parsePLISTGrammar;\n\nvar theme = {};\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(theme, \"__esModule\", { value: true });\nvar ParsedThemeRule = /** @class */ (function () {\n    function ParsedThemeRule(scope, parentScopes, index, fontStyle, foreground, background) {\n        this.scope = scope;\n        this.parentScopes = parentScopes;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    return ParsedThemeRule;\n}());\ntheme.ParsedThemeRule = ParsedThemeRule;\nfunction isValidHexColor(hex) {\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\n        // #rrggbb\n        return true;\n    }\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\n        // #rrggbbaa\n        return true;\n    }\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\n        // #rgb\n        return true;\n    }\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\n        // #rgba\n        return true;\n    }\n    return false;\n}\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n    if (!source) {\n        return [];\n    }\n    if (!source.settings || !Array.isArray(source.settings)) {\n        return [];\n    }\n    var settings = source.settings;\n    var result = [], resultLen = 0;\n    for (var i = 0, len = settings.length; i < len; i++) {\n        var entry = settings[i];\n        if (!entry.settings) {\n            continue;\n        }\n        var scopes = void 0;\n        if (typeof entry.scope === 'string') {\n            var _scope = entry.scope;\n            // remove leading commas\n            _scope = _scope.replace(/^[,]+/, '');\n            // remove trailing commans\n            _scope = _scope.replace(/[,]+$/, '');\n            scopes = _scope.split(',');\n        }\n        else if (Array.isArray(entry.scope)) {\n            scopes = entry.scope;\n        }\n        else {\n            scopes = [''];\n        }\n        var fontStyle = -1 /* NotSet */;\n        if (typeof entry.settings.fontStyle === 'string') {\n            fontStyle = 0 /* None */;\n            var segments = entry.settings.fontStyle.split(' ');\n            for (var j = 0, lenJ = segments.length; j < lenJ; j++) {\n                var segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* Underline */;\n                        break;\n                }\n            }\n        }\n        var foreground = null;\n        if (typeof entry.settings.foreground === 'string' && isValidHexColor(entry.settings.foreground)) {\n            foreground = entry.settings.foreground;\n        }\n        var background = null;\n        if (typeof entry.settings.background === 'string' && isValidHexColor(entry.settings.background)) {\n            background = entry.settings.background;\n        }\n        for (var j = 0, lenJ = scopes.length; j < lenJ; j++) {\n            var _scope = scopes[j].trim();\n            var segments = _scope.split(' ');\n            var scope = segments[segments.length - 1];\n            var parentScopes = null;\n            if (segments.length > 1) {\n                parentScopes = segments.slice(0, segments.length - 1);\n                parentScopes.reverse();\n            }\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n        }\n    }\n    return result;\n}\ntheme.parseTheme = parseTheme;\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort(function (a, b) {\n        var r = strcmp(a.scope, b.scope);\n        if (r !== 0) {\n            return r;\n        }\n        r = strArrCmp(a.parentScopes, b.parentScopes);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    var defaultFontStyle = 0 /* None */;\n    var defaultForeground = '#000000';\n    var defaultBackground = '#ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n        var incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    var colorMap = new ColorMap();\n    var defaults = new ThemeTrieElementRule(0, null, defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n    var root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n    for (var i = 0, len = parsedThemeRules.length; i < len; i++) {\n        var rule = parsedThemeRules[i];\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new Theme(colorMap, defaults, root);\n}\nvar ColorMap = /** @class */ (function () {\n    function ColorMap() {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = Object.create(null);\n    }\n    ColorMap.prototype.getId = function (color) {\n        if (color === null) {\n            return 0;\n        }\n        color = color.toUpperCase();\n        var value = this._color2id[color];\n        if (value) {\n            return value;\n        }\n        value = ++this._lastColorId;\n        this._color2id[color] = value;\n        this._id2color[value] = color;\n        return value;\n    };\n    ColorMap.prototype.getColorMap = function () {\n        return this._id2color.slice(0);\n    };\n    return ColorMap;\n}());\ntheme.ColorMap = ColorMap;\nvar Theme = /** @class */ (function () {\n    function Theme(colorMap, defaults, root) {\n        this._colorMap = colorMap;\n        this._root = root;\n        this._defaults = defaults;\n        this._cache = {};\n    }\n    Theme.createFromRawTheme = function (source) {\n        return this.createFromParsedTheme(parseTheme(source));\n    };\n    Theme.createFromParsedTheme = function (source) {\n        return resolveParsedThemeRules(source);\n    };\n    Theme.prototype.getColorMap = function () {\n        return this._colorMap.getColorMap();\n    };\n    Theme.prototype.getDefaults = function () {\n        return this._defaults;\n    };\n    Theme.prototype.match = function (scopeName) {\n        if (!this._cache.hasOwnProperty(scopeName)) {\n            this._cache[scopeName] = this._root.match(scopeName);\n        }\n        return this._cache[scopeName];\n    };\n    return Theme;\n}());\ntheme.Theme = Theme;\nfunction strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\ntheme.strcmp = strcmp;\nfunction strArrCmp(a, b) {\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (!a) {\n        return -1;\n    }\n    if (!b) {\n        return 1;\n    }\n    var len1 = a.length;\n    var len2 = b.length;\n    if (len1 === len2) {\n        for (var i = 0; i < len1; i++) {\n            var res = strcmp(a[i], b[i]);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        return 0;\n    }\n    return len1 - len2;\n}\ntheme.strArrCmp = strArrCmp;\nvar ThemeTrieElementRule = /** @class */ (function () {\n    function ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        this.scopeDepth = scopeDepth;\n        this.parentScopes = parentScopes;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    ThemeTrieElementRule.prototype.clone = function () {\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    };\n    ThemeTrieElementRule.cloneArr = function (arr) {\n        var r = [];\n        for (var i = 0, len = arr.length; i < len; i++) {\n            r[i] = arr[i].clone();\n        }\n        return r;\n    };\n    ThemeTrieElementRule.prototype.acceptOverwrite = function (scopeDepth, fontStyle, foreground, background) {\n        if (this.scopeDepth > scopeDepth) {\n            console.log('how did this happen?');\n        }\n        else {\n            this.scopeDepth = scopeDepth;\n        }\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n        if (fontStyle !== -1 /* NotSet */) {\n            this.fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            this.foreground = foreground;\n        }\n        if (background !== 0) {\n            this.background = background;\n        }\n    };\n    return ThemeTrieElementRule;\n}());\ntheme.ThemeTrieElementRule = ThemeTrieElementRule;\nvar ThemeTrieElement = /** @class */ (function () {\n    function ThemeTrieElement(mainRule, rulesWithParentScopes, children) {\n        if (rulesWithParentScopes === void 0) { rulesWithParentScopes = []; }\n        if (children === void 0) { children = {}; }\n        this._mainRule = mainRule;\n        this._rulesWithParentScopes = rulesWithParentScopes;\n        this._children = children;\n    }\n    ThemeTrieElement._sortBySpecificity = function (arr) {\n        if (arr.length === 1) {\n            return arr;\n        }\n        arr.sort(this._cmpBySpecificity);\n        return arr;\n    };\n    ThemeTrieElement._cmpBySpecificity = function (a, b) {\n        if (a.scopeDepth === b.scopeDepth) {\n            var aParentScopes = a.parentScopes;\n            var bParentScopes = b.parentScopes;\n            var aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n            var bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n            if (aParentScopesLen === bParentScopesLen) {\n                for (var i = 0; i < aParentScopesLen; i++) {\n                    var aLen = aParentScopes[i].length;\n                    var bLen = bParentScopes[i].length;\n                    if (aLen !== bLen) {\n                        return bLen - aLen;\n                    }\n                }\n            }\n            return bParentScopesLen - aParentScopesLen;\n        }\n        return b.scopeDepth - a.scopeDepth;\n    };\n    ThemeTrieElement.prototype.match = function (scope) {\n        if (scope === '') {\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        }\n        var dotIndex = scope.indexOf('.');\n        var head;\n        var tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        if (this._children.hasOwnProperty(head)) {\n            return this._children[head].match(tail);\n        }\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    };\n    ThemeTrieElement.prototype.insert = function (scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n        if (scope === '') {\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n            return;\n        }\n        var dotIndex = scope.indexOf('.');\n        var head;\n        var tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        var child;\n        if (this._children.hasOwnProperty(head)) {\n            child = this._children[head];\n        }\n        else {\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n            this._children[head] = child;\n        }\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n    };\n    ThemeTrieElement.prototype._doInsertHere = function (scopeDepth, parentScopes, fontStyle, foreground, background) {\n        if (parentScopes === null) {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n            return;\n        }\n        // Try to merge into existing rule\n        for (var i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n            var rule = this._rulesWithParentScopes[i];\n            if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n                // bingo! => we get to merge this into an existing one\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n                return;\n            }\n        }\n        // Must add a new rule\n        // Inherit from main rule\n        if (fontStyle === -1 /* NotSet */) {\n            fontStyle = this._mainRule.fontStyle;\n        }\n        if (foreground === 0) {\n            foreground = this._mainRule.foreground;\n        }\n        if (background === 0) {\n            background = this._mainRule.background;\n        }\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n    };\n    return ThemeTrieElement;\n}());\ntheme.ThemeTrieElement = ThemeTrieElement;\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __awaiter = (commonjsGlobal && commonjsGlobal.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (commonjsGlobal && commonjsGlobal.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(main$1, \"__esModule\", { value: true });\nvar registry_1 = registry;\nvar grammarReader_1 = grammarReader;\nvar theme_1 = theme;\nvar grammar_1 = grammar;\nvar DEFAULT_OPTIONS = {\n    getGrammarDefinition: function (scopeName) { return null; },\n    getInjections: function (scopeName) { return null; }\n};\n/**\n * The registry that will hold all grammars.\n */\nvar Registry = /** @class */ (function () {\n    function Registry(locator) {\n        if (locator === void 0) { locator = DEFAULT_OPTIONS; }\n        this._locator = locator;\n        this._syncRegistry = new registry_1.SyncRegistry(theme_1.Theme.createFromRawTheme(locator.theme));\n        this.installationQueue = new Map();\n    }\n    /**\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n     */\n    Registry.prototype.setTheme = function (theme) {\n        this._syncRegistry.setTheme(theme_1.Theme.createFromRawTheme(theme));\n    };\n    /**\n     * Returns a lookup array for color ids.\n     */\n    Registry.prototype.getColorMap = function () {\n        return this._syncRegistry.getColorMap();\n    };\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    Registry.prototype.loadGrammarWithEmbeddedLanguages = function (initialScopeName, initialLanguage, embeddedLanguages) {\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages: embeddedLanguages });\n    };\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    Registry.prototype.loadGrammarWithConfiguration = function (initialScopeName, initialLanguage, configuration) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._loadGrammar(initialScopeName)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this.grammarForScopeName(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes)];\n                }\n            });\n        });\n    };\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     */\n    Registry.prototype.loadGrammar = function (initialScopeName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._loadGrammar(initialScopeName)];\n            });\n        });\n    };\n    Registry.prototype._loadGrammar = function (initialScopeName, dependentScope) {\n        if (dependentScope === void 0) { dependentScope = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            var prom;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // already installed\n                        if (this._syncRegistry.lookup(initialScopeName)) {\n                            return [2 /*return*/, this.grammarForScopeName(initialScopeName)];\n                        }\n                        // installation in progress\n                        if (this.installationQueue.has(initialScopeName)) {\n                            return [2 /*return*/, this.installationQueue.get(initialScopeName)];\n                        }\n                        prom = new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n                            var grammarDefinition, rawGrammar, injections, deps;\n                            var _this = this;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, this._locator.getGrammarDefinition(initialScopeName, dependentScope)];\n                                    case 1:\n                                        grammarDefinition = _a.sent();\n                                        if (!grammarDefinition) {\n                                            throw new Error(\"A tmGrammar load was requested but registry host failed to provide grammar definition\");\n                                        }\n                                        if ((grammarDefinition.format !== 'json' && grammarDefinition.format !== 'plist') ||\n                                            (grammarDefinition.format === 'json' && typeof grammarDefinition.content !== 'object' && typeof grammarDefinition.content !== 'string') ||\n                                            (grammarDefinition.format === 'plist' && typeof grammarDefinition.content !== 'string')) {\n                                            throw new TypeError('Grammar definition must be an object, either `{ content: string | object, format: \"json\" }` OR `{ content: string, format: \"plist\" }`)');\n                                        }\n                                        rawGrammar = grammarDefinition.format === 'json'\n                                            ? typeof grammarDefinition.content === 'string'\n                                                ? grammarReader_1.parseJSONGrammar(grammarDefinition.content, 'c://fakepath/grammar.json')\n                                                : grammarDefinition.content\n                                            : grammarReader_1.parsePLISTGrammar(grammarDefinition.content, 'c://fakepath/grammar.plist');\n                                        injections = (typeof this._locator.getInjections === 'function') && this._locator.getInjections(initialScopeName);\n                                        rawGrammar.scopeName = initialScopeName;\n                                        deps = this._syncRegistry.addGrammar(rawGrammar, injections);\n                                        return [4 /*yield*/, Promise.all(deps.map(function (scopeNameD) { return __awaiter(_this, void 0, void 0, function () {\n                                                return __generator(this, function (_a) {\n                                                    try {\n                                                        return [2 /*return*/, this._loadGrammar(scopeNameD, initialScopeName)];\n                                                    }\n                                                    catch (error) {\n                                                        throw new Error(\"While trying to load tmGrammar with scopeId: '\" + initialScopeName + \"', it's dependency (scopeId: \" + scopeNameD + \") loading errored: \" + error.message);\n                                                    }\n                                                    return [2 /*return*/];\n                                                });\n                                            }); }))];\n                                    case 2:\n                                        _a.sent();\n                                        resolve(this.grammarForScopeName(initialScopeName));\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        this.installationQueue.set(initialScopeName, prom);\n                        return [4 /*yield*/, prom];\n                    case 1:\n                        _a.sent();\n                        this.installationQueue.delete(initialScopeName);\n                        return [2 /*return*/, prom];\n                }\n            });\n        });\n    };\n    /**\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `loadGrammarFromPathSync`.\n     */\n    Registry.prototype.grammarForScopeName = function (scopeName, initialLanguage, embeddedLanguages, tokenTypes) {\n        if (initialLanguage === void 0) { initialLanguage = 0; }\n        if (embeddedLanguages === void 0) { embeddedLanguages = null; }\n        if (tokenTypes === void 0) { tokenTypes = null; }\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes);\n    };\n    return Registry;\n}());\nvar Registry_1 = main$1.Registry = Registry;\nmain$1.INITIAL = grammar_1.StackElement.NULL;\n\nvar tmToMonacoToken = {};\n\nObject.defineProperty(tmToMonacoToken, \"__esModule\", { value: true });\ntmToMonacoToken.TMToMonacoToken = void 0;\n// as described in issue: https://github.com/NeekSandhu/monaco-textmate/issues/5\nconst TMToMonacoToken = (editor, scopes) => {\n    let scopeName = \"\";\n    // get the scope name. Example: cpp , java, haskell\n    for (let i = scopes[0].length - 1; i >= 0; i -= 1) {\n        const char = scopes[0][i];\n        if (char === \".\") {\n            break;\n        }\n        scopeName = char + scopeName;\n    }\n    // iterate through all scopes from last to first\n    for (let i = scopes.length - 1; i >= 0; i -= 1) {\n        const scope = scopes[i];\n        /**\n         * Try all possible tokens from high specific token to low specific token\n         *\n         * Example:\n         * 0 meta.function.definition.parameters.cpp\n         * 1 meta.function.definition.parameters\n         *\n         * 2 meta.function.definition.cpp\n         * 3 meta.function.definition\n         *\n         * 4 meta.function.cpp\n         * 5 meta.function\n         *\n         * 6 meta.cpp\n         * 7 meta\n         */\n        for (let i = scope.length - 1; i >= 0; i -= 1) {\n            const char = scope[i];\n            if (char === \".\") {\n                const token = scope.slice(0, i);\n                if (editor['_themeService']._theme._tokenTheme._match(token + \".\" + scopeName)._foreground >\n                    1) {\n                    return token + \".\" + scopeName;\n                }\n                if (editor[\"_themeService\"]._theme._tokenTheme._match(token)._foreground > 1) {\n                    return token;\n                }\n            }\n        }\n    }\n    return \"\";\n};\ntmToMonacoToken.TMToMonacoToken = TMToMonacoToken;\n\nObject.defineProperty(dist, \"__esModule\", { value: true });\nvar wireTmGrammars_1 = dist.wireTmGrammars = void 0;\nconst monaco_textmate_1 = main$1;\nconst tm_to_monaco_token_1 = tmToMonacoToken;\nclass TokenizerState {\n    _ruleStack;\n    constructor(_ruleStack) {\n        this._ruleStack = _ruleStack;\n    }\n    get ruleStack() {\n        return this._ruleStack;\n    }\n    clone() {\n        return new TokenizerState(this._ruleStack);\n    }\n    equals(other) {\n        if (!other ||\n            !(other instanceof TokenizerState) ||\n            other !== this ||\n            other._ruleStack !== this._ruleStack) {\n            return false;\n        }\n        return true;\n    }\n}\n/**\n * Wires up monaco-editor with monaco-textmate\n *\n * @param monaco monaco namespace this operation should apply to (usually the `monaco` global unless you have some other setup)\n * @param registry TmGrammar `Registry` this wiring should rely on to provide the grammars\n * @param languages `Map` of language ids (string) to TM names (string)\n */\nfunction wireTmGrammars(monaco, registry, languages, editor) {\n    return Promise.all(Array.from(languages.keys())\n        .map(async (languageId) => {\n        const grammar = await registry.loadGrammar(languages.get(languageId));\n        monaco.languages.setTokensProvider(languageId, {\n            getInitialState: () => new TokenizerState(monaco_textmate_1.INITIAL),\n            tokenize: (line, state) => {\n                const res = grammar.tokenizeLine(line, state.ruleStack);\n                return {\n                    endState: new TokenizerState(res.ruleStack),\n                    tokens: res.tokens.map(token => ({\n                        ...token,\n                        // TODO: At the moment, monaco-editor doesn't seem to accept array of scopes\n                        scopes: editor ? (0, tm_to_monaco_token_1.TMToMonacoToken)(editor, token.scopes) : token.scopes[token.scopes.length - 1]\n                    })),\n                };\n            }\n        });\n    }));\n}\nwireTmGrammars_1 = dist.wireTmGrammars = wireTmGrammars;\n\nasync function dispatchGrammars(scopeName) {\n  switch (scopeName) {\n    case \"source.vue\":\n      return {\n        format: \"json\",\n        content: await import('./vue.tmLanguage-1f8c7b61-1f8c7b61.js')\n      };\n    case \"source.ts\":\n      return {\n        format: \"json\",\n        content: await import('./TypeScript.tmLanguage-01b7ed7f-01b7ed7f.js')\n      };\n    case \"source.js\":\n      return {\n        format: \"json\",\n        content: await import('./JavaScript.tmLanguage-5b3aef1e-5b3aef1e.js')\n      };\n    case \"text.html.basic\":\n      return {\n        format: \"json\",\n        content: await import('./html.tmLanguage-98b80916-98b80916.js')\n      };\n    case \"source.css\":\n      return {\n        format: \"json\",\n        content: await import('./css.tmLanguage-b56789b8-b56789b8.js')\n      };\n    default:\n      return {\n        format: \"json\",\n        content: {\n          scopeName: \"source\",\n          patterns: []\n        }\n      };\n  }\n}\nasync function loadGrammars(monaco, editor) {\n  const registry = new Registry_1({\n    getGrammarDefinition: async (scopeName) => {\n      const dispatch = await dispatchGrammars(scopeName);\n      return JSON.parse(JSON.stringify(dispatch));\n    }\n  });\n  const grammars = /* @__PURE__ */ new Map();\n  grammars.set(\"vue\", \"source.vue\");\n  grammars.set(\"javascript\", \"source.js\");\n  grammars.set(\"typescript\", \"source.ts\");\n  grammars.set(\"css\", \"source.css\");\n  grammars.set(\"html\", \"text.html.basic\");\n  for (const lang of grammars.keys()) {\n    monaco.languages.register({\n      id: lang\n    });\n  }\n  await wireTmGrammars_1(monaco, registry, grammars, editor);\n}\n\nexport { loadGrammars };\n"],
  "mappings": "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",
  "names": ["RegexSource", "Rule", "grammar", "CaptureRule", "RegExpSource", "RegExpSourceList", "MatchRule", "IncludeOnlyRule", "rule", "BeginEndRule", "BeginWhileRule", "RuleFactory", "matcher", "ScopeMetadata", "ScopeMetadataProvider", "Grammar", "StackElementMetadata", "ScopeListElement", "StackElement", "LocalStackElement", "LineTokens", "SyncRegistry", "theme", "chCode", "tag", "JSONStreamState", "JSONToken", "ParsedThemeRule", "ColorMap", "Theme", "ThemeTrieElementRule", "ThemeTrieElement", "resolve", "Registry", "_this", "_a", "i", "registry"]
}
